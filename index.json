[{"categories":["Hexo"],"content":"前言 Hexo是一款基于Node.js的静态博客生成器。他可以帮助用户快速、轻松地创建并部署自己的博客网站。 Hexo的主要特征包括以下几点： 快速：Hexo采用了缓存机制和异步渲染技术，生成速度非常快； 简单易用：Hexo的配置非常简单，它支持大量的主题和插件，使得用户可以快速打造自己的个性化博客； Markdown支持： Hexo支持使用Markdown语法来编写文章，并且可以直接在命令行界面预览效果； 多平台支持：Hexo可以发布到多种平台，例如：Github Pages、HeroKu以及Netlity等等； 插件丰富：Hexo有大量的插件可以供选择，如SEO优化、社交分享等，可以很大程度上满足用户的各种需求； 总而言之，Hexo是一款非常优秀的博客生成器，它能够让用户快速地创建自己的博客网站，并提供了十分丰富的主题和插件来满足用户的需求。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/:1:0","tags":null,"title":"创建Hexo博客之主题安装与基本配置","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"},{"categories":["Hexo"],"content":"安装主题 本项目中安装的Hexo主题是butterfly，首先我们去hexo官方主题页面，搜索我们想要的主题并点击，或者如果主题在github上有仓库，那么我们可以github上搜索hexo-theme，找到心仪的主题。 butterfly主题给出了三种不同的安装，分别是从github仓库中克隆、从gitee仓库中克隆以及使用npm方法进行安装。 在这里我使用的是npm安装方法，需要注意的是，使用npm安装必须要求在前面安装时Hexo的安装版本必须在5.0.0以上，同时使用npm安装，不会在根目录下的themes文件夹中生成主题文件夹，主题会被放在node_modules中。 npm install hexo-theme-butterfly 升级的方法是在根目录下执行npm update hexo-theme-butterfly，同时，建议去github中的Releases或者主题文档中的文档七查看最新版的更新内容，里面有标注_config文件的变更内容，如果有标注，则根据实际情况进行更新配置。 当我们安装好主题之后，接下来就是需要应用主题，直接进入根目录下的_config.yml文件中，找到theme，将默认的landscape更改为butterfly即可。 这个时候我们就已经完成了主题的安装和应用，但是由于这个主题需要pug和stylus的渲染器，不确定我们有没有，所以执行安装这两个插件的命令 npm install hexo-renderer-pug hexo-renderer-stylus --save ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/:2:0","tags":null,"title":"创建Hexo博客之主题安装与基本配置","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"},{"categories":["Hexo"],"content":"升级建议 为了减少主题升级之后带来的不方便，因此我们可以在根目录下创建一个_config.butterfly.yml文件，并且将主题文件夹中的_config.yml文件里面的内容复制一份到刚刚创建好的_config.butterfly.yml文件内（注意：是到node_modules文件夹的主题文件夹中，复制里面的_config.yml文件内容，而不是外面的_config.yml文件内容，粘贴到外面的_config.butterfly.yml） 需要注意的是，不能将主题文件夹中的_config.yml文件删除，然后以后更改内容也只需要在_config.butterfly.yml文件中修改配置即可。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/:2:1","tags":null,"title":"创建Hexo博客之主题安装与基本配置","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"},{"categories":["Hexo"],"content":"基本配置 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/:3:0","tags":null,"title":"创建Hexo博客之主题安装与基本配置","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"},{"categories":["Hexo"],"content":"创建基本页面 创建标签页 进入博客根目录下，打开终端，输入hexo new page tags命令，找到source/tags/index.md，修改里面的内容，切记一定要在Front-matter里面添加type: \"tags\" ---title:小陈的标签页 # 这个可以随意修改名字date:2023-04-14 20:54:26type:\"tage\"# 这个要添加--- 创建分类页 进入博客根目录下，打开终端，输入hexo new page categories命令，找到source/categories/index.md，修改里面的内容，切记一定要在Front-matter里面添加type: \"categories\"。 ---title:我们终会遇见美好 # 这个可以随意修改名字date:2023-04-14 20:55:27type:\"categories\"# 这个要添加--- 创建友情链接 进入博客根目录下，打开终端，输入hexo new page link命令，找到source/link/index.md，修改里面的内容，切记一定要在Front-matter里面添加type: \"link\"。 ---title:小陈的朋友们 # 这个可以随意修改名字date:2023-04-14 20:55:56type:\"link\"# 这个要添加--- 添加友情链接 有了友情链接的页面，就需要添加一些友链，那么怎么去添加呢，一共有两种方法，一种是本地生成的。这种方法就需要你在根目录下的source/_data文件夹中创建一个link.yml文件，（如果没有_data文件夹，请自行创建一个，切记data前面是下划线'_'，不是'-'），可以先复制官方文档中的内容，后期再进行修改或添加。 - class_name:友情链接class_desc:那些人，那些事link_list:- name:Hexolink:https://hexo.io/zh-tw/avatar:https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svgdescr:快速、简单且强大的网志框架- class_name:网站class_desc:值得推荐的网站link_list:- name:Youtubelink:https://www.youtube.com/avatar:https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.pngdescr:视频网站- name:Weibolink:https://www.weibo.com/avatar:https://i.loli.net/2020/05/14/TLJBum386vcnI1P.pngdescr:中国最大社交分享平台- name:Twitterlink:https://twitter.com/avatar:https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.pngdescr:社交分享平台 第二种方法是远程拉取，该方法是从4.0.0以后，就支持远程拉取了，需要注意的是，如果远程拉取加载成功之后，本地生产的就失效了，并且远程拉取支持的格式仅仅只有json。 如果需要远程拉取，则需要在 source/link/index.md 这个文件的 front-matter 添加远程链接， flink_url: xxxxx # json文件的位置 下面是官方文档中关于远程拉取的json文件模板 [ { \"class_name\": \"友情链接\", \"class_desc\": \"那些人，那些事\", \"link_list\": [ { \"name\": \"Hexo\", \"link\": \"https://hexo.io/zh-tw/\", \"avatar\": \"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg\", \"descr\": \"快速、简单且强大的网志框架\" } ] }, { \"class_name\": \"网站\", \"class_desc\": \"值得推荐的网站\", \"link_list\": [ { \"name\": \"Youtube\", \"link\": \"https://www.youtube.com/\", \"avatar\": \"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png\", \"descr\": \"视频网站\" }, { \"name\": \"Weibo\", \"link\": \"https://www.weibo.com/\", \"avatar\": \"https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png\", \"descr\": \"中国最大社交分享平台\" }, { \"name\": \"Twitter\", \"link\": \"https://twitter.com/\", \"avatar\": \"https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png\", \"descr\": \"社交分享平台\" } ] } ] 创建404页面 主题中内置了一个简单的404界面，我们可以在设置中搜索开启 需要额外注意的是，在本地预览时，如果我们访问出错了的网站是不会自动跳转到404页面的，如果想在本地预览时查看404页面的效果，需要访问http://localhost:4000/404.html。 # A simple 404 page error_404: enable: true subtitle: '不好意思，页面走丢啦' # 这个可以自由编辑 background: https://i.loli.net/2020/05/19/aKOcLiyPl2JQdFD.png 最后 官方文档中还提到了添加图库以及子页面的方法，但是由于我暂时用不上，因此在这里没有配置这一项，如果有需要的，可以访问官方文档，根据文档中的教程一步一步配置。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/:3:1","tags":null,"title":"创建Hexo博客之主题安装与基本配置","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"},{"categories":["Hexo"],"content":"总结 至此，我们就已经完成hexo主题的下载更换以及一些基本配置，下面我们就针对主题进行更深入的修改配置。 \u003c本文完\u003e 本篇文章参考官方文档 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/:4:0","tags":null,"title":"创建Hexo博客之主题安装与基本配置","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"},{"categories":["Hexo"],"content":"前言 Hexo是一款基于Node.js的静态博客生成器。他可以帮助用户快速、轻松地创建并部署自己的博客网站。 Hexo的主要特征包括以下几点： 快速：Hexo采用了缓存机制和异步渲染技术，生成速度非常快； 简单易用：Hexo的配置非常简单，它支持大量的主题和插件，使得用户可以快速打造自己的个性化博客； Markdown支持： Hexo支持使用Markdown语法来编写文章，并且可以直接在命令行界面预览效果； 多平台支持：Hexo可以发布到多种平台，例如：Github Pages、HeroKu以及Netlity等等； 插件丰富：Hexo有大量的插件可以供选择，如SEO优化、社交分享等，可以很大程度上满足用户的各种需求； 总而言之，Hexo是一款非常优秀的博客生成器，它能够让用户快速地创建自己的博客网站，并提供了十分丰富的主题和插件来满足用户的需求。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:1:0","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"配置 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:0","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"搜索 顾名思义就是在个人博客中添加一个搜索功能，作者给出了三种搜索方式，第一种是Algolia，第二种是本地搜索，第三种是DocSearch，在这里我们使用第二种方法，也就是本地搜索。 如果使用本地搜索的方法，首先第一需要安装hexo-generator-searchdb或者hexo-generator-search这两个中的其中一个，点击链接，根据文档来进行相关的配置。（本人使用的是第二个链接） # 安装依赖 npm install hexo-generator-search --save 安装好依赖之后，回到主题配置文件，使用查找功能找到local_search，修改相关配置。 # Local searchlocal_search:enable:true# Preload the search data when the page loads.preload:false# Show top n results per article, show all results by setting to -1top_n_per_article:1# Unescape html strings to the readable one.unescape:falseCDN: 参数 说明 enable 是否开启本地搜索 preload 预加载，开启后，进入网页后会自动加载搜索文件。关闭时，只有点击搜索按钮后，才会加载搜索文件 top_n_per_article 匹配的文章结果，默认显示最开始的1段结果 unescape 将html字符串解码为可读字符串 CDN 搜索文件的 CDN 地址（默认使用的本地链接） 记得运行 hexo clean ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:1","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"评论 关于评论设置，作者也给出了多种方法，在这里我选择的是livere，也就是来必力。 首先注册一个来必力账号，如果没有的话； 登录来必力之后，进入管理页面，可以修改一下设置里面的’网站的URL'，将其设置为自己的域名； 来到代码管理页面，复制里面的data_uid，记住这一个UID在后面很重要的； 复制好uid之后回到主题配置文件里面，找到livere，将复制好的uid复制进去即可。 到此，评论系统也就配置完成了。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:2","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"美化与特效 网站背景 网站的默认背景显示为白色，可以为其设置为图片或其他的颜色。 进入主题配置文件，找到backgorund，修改配置即可。 # Website Background (設置網站背景)# can set it to color or image (可設置圖片 或者 顔色)# The formal of image: url(http://xxxxxx.com/xxx.jpg)background:url(/img/image1.png) 留意: 如果你的网站根目录不是'/',使用本地图片时，需加上你的根目录。 例如：网站是 https://yoursite.com/blog,引用一张img/xx.png图片，则设置background为 `url(/blog/img/xx.png) footer背景 这个设置如果你需要在后期使用css样式来修改的话，这里千万不要设置为true，因为如果你css里面设置它为透明色，他不会生效的。 # footer是否显示图片背景(与top_img一致)footer_bg:false ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:3","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"页面美化 会改变ol、ul、h1-h5的样式，field配置生效的区域：post 只在文章页生效、site 在全站生效 进入主题配置文件，修改相关配置。 # 美化页面显示beautify:enable:truefield:site# site/posttitle-prefix-icon:'\\f0c1'title-prefix-icon-color:\"#F47466\" 需要注意的是，title-prefix-icon的值是图标的Unicode。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:4","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"网站副标题 可设置主页中显示的网站副标题或者喜欢的座右铭。 修改主题配置文件 # the subtitle on homepage (主頁subtitle)subtitle:enable:true# Typewriter Effect (打字效果)effect:true# Customize typed.js (配置typed.js)# https://github.com/mattboldt/typed.js/#customizationtyped_option:# source 調用第三方服務# source: false 關閉調用# source: 1 調用一言網的一句話（簡體） https://hitokoto.cn/# source: 2 調用一句網（簡體） https://yijuzhan.com/# source: 3 調用今日詩詞（簡體） https://www.jinrishici.com/# subtitle 會先顯示 source , 再顯示 sub 的內容source:2# 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字sub:- 今日事\u0026#44;今日毕- Never put off till tomorrow what you can do today ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:5","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"字数统计 要为Butterfly配上字数统计特性, 你需要如下几个步骤: 打开 hexo 工作目录 npm install hexo-wordcount –save 修改 主题配置文件: wordcount: enable: true post_wordcount: true min2read: true total_wordcount: true ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:6","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"图片大图展示 进入主题配置文件，搜索fancybox，将值改为true，即可。 当然还有一种方法，那就是进去主题配置文件，搜索medium_zoom的值改为true即可。 只能开启一个 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:7","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"Pjax 当用户点击链接，通过ajax更新页面需要变化的部分，然后使用HTML5的pushState修改浏览器的URL地址。这样可以不用重复加载相同的资源（css/js）， 从而提升网页的加载速度。 # Pjax# It may contain bugs and unstable, give feedback when you find the bugs.# https://github.com/MoOx/pjaxpjax:enable:trueexclude:# - xxxx# - xxxx ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:8","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"Pangu 如果你每次看到网页上的中文字和英文、数字、符号挤在一块，就会坐立难安，忍不住想在它们之间加个空格。这个外挂正是你在网路世界走跳所需要的东西，它会自动替你在网页中所有的中文字和半形的英文、数字、符号之间插入空白。 # https://github.com/vinta/pangu.js# Insert a space between Chinese character and English character (中英文之間添加空格)pangu:enable:truefield:site# site/post field只支持两个参数，post(只在文章页生效)和site(全站生效) ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:9","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"添加全局吸底Aplayer教程 进入主题配置文件。 开启主题的aplayerInject # Inject the css and script (aplayer/meting)aplayerInject:enable:trueper_page:true 插入Aplayer html inject:head:- \u003clink rel=\"stylesheet\" href=\"/css/style.css\"\u003ebottom:- \u003cdiv class=\"aplayer no-destroy\" data-id=\"60198\" data-server=\"netease\" data-type=\"playlist\" data-fixed=\"true\" data-autoplay=\"true\"\u003e \u003c/div\u003e ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:10","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"CSS样式 虽然该主题的自定义能力蛮不错，但是总会有一些地方不尽如人意，又因为他也支持CSS样式表来修改，所以我们就来使用CSS样式表来让博客更加美观。 首先在博客根目录下的source文件夹中创建一个css文件夹，在其中创建一个css样式表文件，名字随意，创建好之后进行添加css样式即可，这里我给出我的css样式表的代码来作为参考。 #footer { background: transparent; } /* 鼠标样式 */ body { cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/default.cur), default; } a, img { cursor: url(https://cdn.jsdelivr.net/gh/constown/HexoCustomFile/public/cursors/pointer.cur), default; } /* 滚动条样式 */ ::-webkit-scrollbar { width: 8px; height: 8px; } ::-webkit-scrollbar-track { background-color: rgba(73, 177, 245, 0.2); border-radius: 2em; } ::-webkit-scrollbar-thumb { background-color: #49b1f5; background-image: -webkit-linear-gradient( 45deg, rgba(255, 255, 255, 0.4) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.4) 75%, transparent 75%, transparent ); border-radius: 2em; } ::-webkit-scrollbar-corner { background-color: transparent; } ::-moz-selection { color: #fff; background-color: #49b1f5; } 编写好之后，怎么引用这个样式表呢，只需要在主题配置文件中找到inject，修改head，将css样式表引用进去即可。 inject:head:- \u003clink rel=\"stylesheet\" href=\"/css/style.css\"\u003e ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:2:11","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"结语 至此，butterfly主题的hexo个人静态博客就到此结束了，如果还有什么需求，可以先去主题官方文档中查看，之后再去网上搜索。 \u003c本文完\u003e 本篇文章参考官方文档 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/:3:0","tags":null,"title":"创建Hexo博客之Hexo主题配置2","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE2/"},{"categories":["Hexo"],"content":"前言 Hexo是一款基于Node.js的静态博客生成器。他可以帮助用户快速、轻松地创建并部署自己的博客网站。 Hexo的主要特征包括以下几点： 快速：Hexo采用了缓存机制和异步渲染技术，生成速度非常快； 简单易用：Hexo的配置非常简单，它支持大量的主题和插件，使得用户可以快速打造自己的个性化博客； Markdown支持： Hexo支持使用Markdown语法来编写文章，并且可以直接在命令行界面预览效果； 多平台支持：Hexo可以发布到多种平台，例如：Github Pages、HeroKu以及Netlity等等； 插件丰富：Hexo有大量的插件可以供选择，如SEO优化、社交分享等，可以很大程度上满足用户的各种需求； 总而言之，Hexo是一款非常优秀的博客生成器，它能够让用户快速地创建自己的博客网站，并提供了十分丰富的主题和插件来满足用户的需求。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:1:0","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"配置 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:0","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"语言、网站资料 Hexo博客默认的语言是en，支持三种不同的语言，分别是default(en)、zh-CN(简体)以及zh-TW(繁体)，修改博客语言需要到根目录下的_config.yml文件中找到language:，将值改为zh-CN。 # Sitelanguage:zh-CN 修改网站各种资料，例如标题、副标题和邮箱等个人资料，请修改博客根目录的_config.yml文件。 # Sitetitle:'小陈的博客'subtitle:'一个想摆烂的代码人'description:'欢迎来到摆烂的代码世界'keywords:Blogauthor:Chenlanguage:zh-CNtimezone:''# URL## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project'url:http://qichenni.github.io ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:1","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"导航栏设置 上面是修改的文件是博客根目录下的_config.yml文件内容，接下来要修改的内容都是在刚刚创建的_config.butterfly.yml文件。 参数设置 nav: logo: #image display_title: true fixed: false # fixed navigation bar(固定导航条) 参数 解释 logo 网站的logo，支持图片，可以直接填入图片的链接 display_title 是否显示网站标题，true表示显示，false表示关闭 fixed 是否固定状态栏 菜单/目录 主题中的配置文件中的关于菜单/目录都是被注释着的，当我们需要启用的时候，只需要将前面的‘#’号删除即可。 原来的菜单/目录的配置如下： Home:/ || fas fa-homeArchives:/archives/ || fas fa-archiveTags:/tags/ || fas fa-tagsCategories:/categories/ || fas fa-folder-openList||fas fa-list:Music:/music/ || fas fa-musicMovie:/movies/ || fas fa-videoLink:/link/ || fas fa-linkAbout:/about/ || fas fa-heart 但由于我们在这里没有movie和music，因此，我们可以将movie和music删除，更替为link和about。 # 进入_config.butterfly.ymlmenu:主页:/ || fas fa-home时间轴:/archives/ || fas fa-archive标签:/tags/ || fas fa-tags分类:/categories/ || fas fa-folder-open链接||fas fa-list:友情链接:/link/ || fas fa-link关于我:/about/ || fas fa-heart 需要注意的是，书写格式必须要必须是/xxx/，后面||分开，然后写图标名，如果你不想它显示图标，也可以不写图标名，子目录默认是展开的，如果想要隐藏展开，只需要在子目录后加上一||hide即可，例如链接||fas fa-list || hide:，最后，导航栏的名字可以自行更改。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:2","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"代码设置 注意：代码块中的所有功能只适用于 Hexo 自带的代码渲染，如果使用第三方的渲染器，不一定会有效。 代码高亮样式 butterfly主题支持六种不同的代码高亮样式，分别是：darker、pale night、light、ocean、mac、mac light。 修改代码高亮样式也很简单，只需要我们进入主题配置文件，将代码高亮主题改成自己喜欢的主题即可。 # 进入_config.butterfly.ymlhighlight_theme:mac darker pale night light ocean mac mac light 如果你不喜欢或者不需要代码高亮，你也可以将highlight_theme改为false，这样的效果如下： 最后，如果以上这几款都不能满足你，你也可以自定义代码高亮，主题作者也给出了自定义代码高亮主题的教程，点击此链接跳转过去吧。 代码复制 顾名思义，就是设置代码是否可以被复制的一项功能，这项功能默认是开启的，如果你不希望代码能够被复制，可以在主题配置文件，也就是_config.butterfly.yml中找到highlight_copy: true改为highlight_copy: false即可。 代码框展开/关闭 在默认的情况下，代码框是自动展开的，如果你不希望代码框默认是展开的，可以去主题配置文件，也就是_config.butterfly.yml中找到highlight_shrink:，将其属性从false改成true，当我们将这一属性改为true之后，代码框就会默认不展开，需要我们点击代码框上的‘\u003e’来展开。 作者也针对这一属性给出了三个属性值，第一个是true，当我们选择这个属性值的时候，全部代码框是不展开的，需要点击\u003e才能展开；第二个是false，当们选择这个属性值的时候，全部代码是展开的，可以点击\u003e来关闭代码框；最后一个就是none，当我们选择这个属性值的时候，是全部展开的，并且没有\u003e按钮来控制开与关。 你也可以在post/page页对应的markdown文件front-matter添加highlight_shrink来独立配置。当主题配置文件中的 highlight_shrink 设为true时，可在front-matter添加highlight_shrink: false来单独配置文章展开代码框。当主题配置文件中的 highlight_shrink 设为false时，可在front-matter添加highlight_shrink: true来单独配置文章收缩代码框。 代码换行 在默认情况下，Hexo在编译的时候不会实现代码自动换行，如果你不想代码换行的，那么可以考虑修改代码换行的属性。 # 进入_config.butterfly.ymlcode_word_wrap:true 修改完之后，还需要根据你使用的渲染的进一步设置。 如果你是使用highlight渲染，需要找到你站点的Hexo配置文件_config.yml，将line_number改成false。 highlight:enable:trueline_number:false# \u003c- 改这里auto_detect:falsetab_replace: 如果你是使用prismjs渲染，需要找到你站点的Hexo配置文件_config.yml，将line_number改成false。 prismjs: enable: false preprocess: true line_number: false # \u003c- 改这里 tab_replace: '' 在这里就没有修改了，因为我觉得还是需要不需要换行的好，有时候复制容易忽略代码换行了的问题，最后导致报错。 如果你设置了，那么代码框底部就不会有滑动条了。 代码框高度 主题版本3.7.0以上支持 该属性可以设置代码框的高度，如果代码内容只会显示高度之内的，超出的部分会默认隐藏，并且显示展开按钮。 # 进入_config.butterfly.ymlhighlight_height_limit: false # unit:px 注意： 单位是px，直接添加数字，如 200，不需要我们手动添加单位了； 虽然我们设置的是200px，但实际上代码框的限制高度是在我们设置的基础上再加30px，这样做的目的也是为了避免某段代码高度只超出highlight_height_limit设置的高度一点时，出现有展开按钮，但展开之后没内容的现象。 不适用于隐藏后的代码块（ css 设置 display: none） ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:3","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"社交图标 主题支持font-awesome v6图标。 如何添加社交图标，只需要我们在主题配置文件（_config.butterfly.yml）中使用查找功能找到social，在主题配置文件中默认添加了两个社交图标，一个是github，一个是email，那么如何添加呢，只需要点击上面的链接，跳转到图标库中，找到我们需要的图标。 例如我想添加一个Blog，只需要搜索Blog，下面就会出现搜索出来的结果 然后找到你喜欢的图标，点击进去 获得属性之后，回到主题配置文件，找到social，在下面添加图标，其结构为：图标名：url || 描述性文字 || color。 social:fab fa-github:https://github.com/qichenxiaoni || Github || '#24292e'fas fa-envelope:mailto:xxxxxx@gmail.com || Email || '#4a7dbe'fa-solid fa-blog:https://qichenxiaoni.work || Blog || 'pink' 后续会出如何更换图标库 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:4","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"头像 主题默认的头像是一个H，那怎么去修改呢，很简单，只需要到主题配置文件中找到avatar属性即可更换头像。 avatar:img:/img/avatar.png # 支持本地图像，也支持网络链接effect:true# 头像会一直转圈，默认是false ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:5","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"顶部图 **注意：**由于这一部分有一些设置，我没有进行设置，并且该部分的一些设置会影响到后面的一些美化设置，因此，我在此部分简短地介绍我做的更改。 首先我在顶部图这一部分只做了两处修改，第一处是修改了主页的横幅，也就是一进博客的第一部分，第二部分就是页面顶部图片。 # 主页横幅index_img:\"./img/image1.png\"# 如果页面没有设置图片，则显示这个default_top_img:\"./img/image1.png\"#(这个不知道为什么好像没生效) 需要注意的是： 如果不要显示顶部图，可直接配置 disable_top_img: true; 顶部图的获取顺序，如果都没有配置，则不显示顶部图; 页面顶部图的获取顺序：各自配置的 top_img \u003e 配置文件的 default_top_img; 文章页顶部图的获取顺序：各自配置的 top_img \u003e cover \u003e 配置文件的 default_top_img 具体的配置还请前往博客教程文档查看。点击此链接跳转。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:6","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"文章封面 文章的 markdown 文档上,在 Front-matter添加 cover ,并填上要显示的图片地址，如果不配置 cover,可以设置显示默认的 cover，如果不想在首页显示 cover, 可以设置为 false。 # 进入主题配置文件cover:# display the cover or not (是否顯示文章封面)index_enable:true#主页是否显示文章封面图aside_enable:true#侧栏是否显示文章封面图archives_enable:true#归档页面是否显示文章封面图# the position of cover in home page (封面顯示的位置)# left/right/both 全左/全右/左右轮换position:both# When cover is not set, the default cover is displayed (當沒有設置cover時，默認的封面顯示)default_cover:- https://file.crazywong.com/gh/jerryc127/CDN@latest/cover/default_bg.png- https://file.crazywong.com/gh/jerryc127/CDN@latest/cover/default_bg2.png- https://file.crazywong.com/gh/jerryc127/CDN@latest/cover/default_bg3.png ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:7","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"主页文章节选（自动节选和文章页description） 因为主题UI的关系，主页文章节选仅仅支持自动节选以及文章页description，自动节选就是默认从你的文章中摘选你设置length个字展示出来，文章页description就是你自己在froot-matter中添加一个desciption，你自己填入值。 # 修改配置文件# Display the article introduction on homepage# 1: description # 只显示description；# 2: both (if the description exists, it will show description, or show the auto_excerpt) # 优先选择description，如果没有配置description，则显示自动节选的内容# 3: auto_excerpt (default) # 只显示自动节选# false: do not show the article introduction # 不显示文章内容index_post_content:method:2length:500# if you set method to 2 or 3, the length need to config （如果你选择了2/3，那么长度`length`就需要配置） description在front-matter里添加。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:8","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"内容复制相关配置 该选项可以配置网站文章是否允许被复制，复制时带不带版权信息已经复制多少就在复制内容之后添加版权信息。 # 进入主题配置文件# copy settings# copyright: Add the copyright information after copied content (複製的內容後面加上版權信息)copy:enable:truecopyright:enable:truelimit_count:50 配置 说明 enable 是否开启网站复制权限 copyright 复制内容后面加上版权信息 enable 是否开启复制版权信息添加 limit_count 字数限制，当复制字数超过此限制时，将在复制内容后面加上版权信息 eg： ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:9","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"文章页面配置 文章版权 顾名思义，为你的博客文章展示文章的版权以及许可协议，具体操作进去主题配置文件，找到post_copyright，修改相关配置。 post_copyright:enable:truedecode:falseauthor_href:license:CC BY-NC-SA 4.0license_url:https://creativecommons.org/licenses/by-nc-sa/4.0/ **注意：**由于Hexo 4.1开始，默认对网址进行解码，以至于如果是中文网址，会被解码，可设置decode: true来显示中文网址。 true false 当然了，如果文章是转载的，并非原创，不需要显示版权的，可以在文章Front-matter单独设置，也支持对文章单独设置版权信息，也是在文章的Front-matter单独设置。 # 转载 copyright: false # 单独设置版权 copyright_author: xxxx copyright_author_href: https://xxxxxx.com copyright_url: https://xxxxxx.com copyright_info: 此文章版权归xxxxx所有，如有转载，请注明来自原作者 TOC 在文章页面，会有目录，用来显示TOC，那么如何设置呢？只需要我们进入主题配置文件，找到toc，然后修改下面的配置即可。 # toc (目錄)toc:# 文章页是否显示TOCpost:true# 普通页面是否显示tocpage:false# 是否显示章节数number:true# 是否展开tocexpand:true# 简介模式 （侧边栏只显示TOC，只对文章页有效）style_simple:false# for post# 实现显示滚动进度百分比scroll_percent:true 为特定文章配置 如果你的某些文章他不需要toc，或者需要toc其他的设置的时候，只需要在你文章的头部，也就是Front-matter里面添加toc_number和toc，并配置true或者false即可，也不用担心在文章中设置是否能生效，因为文章中的Front-matter的优先级是要高于主题配置文件的。 相关文章 相关文章就是在你的文章尾部根据文章的tag的比重来推荐的，那么怎么设置显示推荐文章的数量呢，需要我们进入主题配置文件中，找到related_post，修改其配置即可。 # Related Articlesrelated_post:enable:truelimit:6# 显示推荐文章数目date_type:created# or created or updated 文章日期顯示創建日或者更新日 当文章封面设置为 false 时，或者没有获取到封面配置，相关文章背景将会显示主题色。 文章过期提示 因为有一部分的博客内容会随着时间的变化而产生改变，也就是说或许在之前是可以使用的，但是可能随着时间变化，某些东西消失了，或者是更新了，原本的内容就不再适用了，因此可以设置一个这个过期提示告诉他人，这个内容是多久多久前写的，可能已经失效了或是不适用了。 那么怎么来设置呢，只需要进入主题配置文件中，找到noticeOutdate，修改其下面的配置即可。 # Displays outdated notice for a post (文章過期提醒)noticeOutdate:enable:truestyle: flat # style:simple/flatlimit_day:183# When will it be shownposition: top # position:top/bottommessage_prev:It has beenmessage_next:days since the last update, the content of the article may be outdated. 最后 原本还有一些文章页面配置的，但是由于我没使用那些，因此没有进行说明，例如文章编辑按钮、文章分页按钮以及文章打赏，如果有需求的，可以点击此链接跳转过去设置。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:10","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"Footer设置 博客年份设置 since是一个来展示你站点起始时间的选项。它位于页面的最底部，如果需要设置，那么进入主题配置文件，找到footer，进行修改。 footer:owner:enable:truesince:2023 页脚自定义文本 custom_text是一个给你用来在页脚自定义文本的选项。通常你可以在这里写声明文本等。支持 HTML，如果需要设置，那么进入主题配置文件，找到footer，进行修改。 # Footer Settings# --------------------------------------footer:owner:enable:truesince:2023custom_text:欢迎来到小陈的博客空间copyright:true# Copyright of theme and framework ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:11","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"侧边栏设置 侧边排版 侧边排版的设置很多，也很详细，他可以让我们自行决定哪个项目需要显示，怎么显示，位置在哪里，也可以设置整个侧边栏不显示。 进入主题配置文件，找到aside，修改下面的配置即可。 aside:# 是否开启侧边栏enable:truehide:false# 是否显示按钮button:truemobile:true# display on mobileposition:right# left or rightdisplay:archive:truetag:truecategory:truecard_author:enable:truedescription:button:enable:trueicon:fab fa-githubtext:Follow Melink:https://github.com/xxxxxxcard_announcement:enable:truecontent:This is my Blogcard_recent_post:enable:truelimit:5# if set 0 will show allsort:date# date or updatedsort_order:# Don't modify the setting unless you know how it workscard_categories:enable:truelimit:8# if set 0 will show allexpand:none# none/true/falsesort_order:# Don't modify the setting unless you know how it workscard_tags:enable:truelimit:40# if set 0 will show allcolor:true# 是否标签有颜色orderby:random# Order of tags, random/name/lengthorder:1# Sort of order. 1, asc for ascending; -1, desc for descendingsort_order:# Don't modify the setting unless you know how it workscard_archives:enable:truetype:monthly# yearly or monthlyformat: MMMM YYYY # eg:YYYY年MM月order:-1# Sort of order. 1, asc for ascending; -1, desc for descendinglimit:8# if set 0 will show allsort_order:# Don't modify the setting unless you know how it workscard_webinfo:enable:truepost_count:truelast_push_date:truesort_order:# Don't modify the setting unless you know how it works 由于侧边栏排版的设置多样性强，我也没有完全试完，如果有兴趣的可以自行摸索一下，这里就不多做介绍了。 访问人数 busuanzi (UV 和 PV) 这个我自认为没有多大的用处，首先个人博客大概率是不会有很多人看的，并且busuanzi开启之后，数据是不对的，必须要格式化清空一遍，但是没找到格式化清空的有效方法，因此没设置，但如果有需求的朋友或者是知道怎么格式化清空的朋友也可以试试。 进入主题配置文件，找到busuanzi，修改下面的配置。 busuanzi:site_uv:truesite_pv:truepage_pv:true 同时如果你需要修改busuanzi的CDN链接，可以到主题配置文件中搜索CDN，进行修改。 CDN:option:busuanzi:xxxxxxxxx 运行时间 这个设置就是显示该个人博客运行了多久了，可设置也可不设置，全凭个人意愿，如果需要设置，进入主题配置文件，搜索runtimeshow，将enable设置为true和 publish_date:设置为具体的时间（可以是月/日/年 时间，也可以是年/月/日 时间）。 runtimeshow: enable: true publish_date: 2023/4/15 00:00:00 ##网页开通时间 #格式: 月/日/年 时间 #也可以写成 年/月/日 时间 最后 侧边栏设置还有最新评论以及自定义侧边栏，由于我没有设置了，因此有需要的朋友可以自行前往主题官方文档进行查看修改，点击此链接进行跳转。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:12","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"功能按钮 简繁转换按钮 简体繁体互换，右下角会有简繁转换按钮，修改主题配置文件，找到translate进行修改。 # Conversion between Traditional and Simplified Chinese (簡繁轉換)translate:enable:true# The text of a buttondefault:繁# the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）defaultEncoding:2# Time delaytranslateDelay:0# The text of the button when the language is Simplified ChinesemsgToTraditionalChinese:'繁'# The text of the button when the language is Traditional ChinesemsgToSimplifiedChinese:'簡' 这个简繁转换还是有时候会存在部分字体转换不完全的现象 阅读模式 阅读模式下会去掉除文章外的内容，避免干扰阅读，只会出现在文章页面，右下角会有阅读模式按钮，修改主题配置文件，找到readmode改成true即可。 夜间模式 # dark modedarkmode:enable:true# Toggle Button to switch dark/light modebutton:true# Switch dark/light mode automatically (自動切換 dark mode和 light mode)# autoChangeMode: 1 Following System Settings, if the system doesn't support dark mode, it will switch dark mode between 6 pm to 6 am# autoChangeMode: 2 Switch dark mode between 6 pm to 6 am# autoChangeMode: falseautoChangeMode:false# Set the light mode time. The value is between 0 and 24. If not set, the default value is 6 and 18start:# 8end:# 22 参数 解释 button 是否在右下角显示日夜模式切换按钮 autoChangeMode 自动切换的模式 autoChangeMode: 1 跟随系统而变化，不支持的浏览器/系统将按照时间 start 到 end 之间切换为 light modeautoChangeMode: 2 只按照时间 start 到 end 之间切换为 light mode ,其余时间为 dark modeautoChangeMode: false 取消自动切换 start light mode 的开始时间 end light mode 的结束时间 滚动状态百分比 # show scroll percent in scroll-to-top buttonrightside_scroll_percent:true 按钮排序 # Don't modify the following settings unless you know how they work (非必要请不要修改 )# Choose: readmode,translate,darkmode,hideAside,toc,chat,comment# Don't repeat 不要重复rightside_item_order:enable:falsehide:# readmode,translate,darkmode,hideAsideshow:# toc,chat,comment ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:2:13","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"结语 至此，我们就完成了主题的深入配置一，当然了，主题官方文档还准备了一些标签插件，但是我由于没有使用，因此有需要的朋友点击链接自行跳转观看。接下来进入深入配置二。 \u003c本文完\u003e 本篇文章参考官方文档 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/:3:0","tags":null,"title":"创建Hexo博客之Hexo主题配置1","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE1/"},{"categories":["Hexo"],"content":"前言 Hexo是一款基于Node.js的静态博客生成器。他可以帮助用户快速、轻松地创建并部署自己的博客网站。 Hexo的主要特征包括以下几点： 快速：Hexo采用了缓存机制和异步渲染技术，生成速度非常快； 简单易用：Hexo的配置非常简单，它支持大量的主题和插件，使得用户可以快速打造自己的个性化博客； Markdown支持： Hexo支持使用Markdown语法来编写文章，并且可以直接在命令行界面预览效果； 多平台支持：Hexo可以发布到多种平台，例如：Github Pages、HeroKu以及Netlity等等； 插件丰富：Hexo有大量的插件可以供选择，如SEO优化、社交分享等，可以很大程度上满足用户的各种需求； 总而言之，Hexo是一款非常优秀的博客生成器，它能够让用户快速地创建自己的博客网站，并提供了十分丰富的主题和插件来满足用户的需求。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/:1:0","tags":null,"title":"创建Hexo博客之Hexo安装","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/"},{"categories":["Hexo"],"content":"安装 首先在最开始，需要确保我们电脑中有git工具和node.js，以及已经配置好了npm的淘宝镜像或者是cnpm，如果没有配置好，可以参考我上一篇博客，创建Hexo博客之前期准备，如果已经配置好一切，那么请继续。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/:2:0","tags":null,"title":"创建Hexo博客之Hexo安装","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/"},{"categories":["Hexo"],"content":"安装Hexo 创建一个文件夹，在任何地方都可以，我们可已经其命名为Blog，然后在代码编辑器里面将这个文件夹打开（这里我使用的是VSCode），并打开其终端。 在终端中输入npm install hexo -g进行全局安装 # 安装Hexo npm install hexo -g # 查看是否安装成功 hexo version 在我们安装完成之后，接下来就可以进行初始化项目的操作了。 # 进入Blog文件夹中，输入 hexo init 在初始化的之后，可能会出现Blog文件夹中没有node_modules文件夹，当出现这个情况的时候，我们可以执行npm install的命令安装所需要的依赖文件。 npm install 当我们执行完上面的所有步骤之后，我们就可以运行指令查看初步的hexo个人博客是否搭建成功 # 清除缓存 hexo clean # 重新生成文件 hexo g # 运行 hexo s 如果能顺利执行以上的命令并且出现http://localhost:4000的时候就证明已经运行成功了。 如果想要退出本地发布，可以在终端中输入Ctrl+C来停止。 至此，Hexo的安装就告一段落了，接下来我们对博客的配置文件进行简单的修改吧。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/:2:1","tags":null,"title":"创建Hexo博客之Hexo安装","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/"},{"categories":["Hexo"],"content":"简单配置 进入Blog文件夹中找到_config.yml文件，可以根据我的来修改你以下的配置。 title: '小陈的博客' ## 博客名字 subtitle: '一个想摆烂的代码人' ## 博客的副标题 description: '欢迎来到摆烂的代码世界' ## 头像下面的个人短介 keywords: Blog ##博客的关键字 author: Chen ## 作者名字 language: zh-CN ## 显示语言类型 timezone: '' ## 时区 # URL ## Set your site url here. For example, if you use GitHub Page, set url as 'https://username.github.io/project' url: http://qichenni.github.io **注意：**修改完之后重新运行推荐执行hexo clean、hexo g以及hexo s，因为有时候可能会在你修改之后运行不生效，需要清除缓存之后重新生成之后再发布出去。不过我们修改根目录下的package.json文件，找到\"server\"，修改后面的值，在原本的hexo server前面加上hexo clean 和 hexo generate，在它们三个之间一定要加上\u0026\u0026来表示并。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/:2:2","tags":null,"title":"创建Hexo博客之Hexo安装","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/"},{"categories":["Hexo"],"content":"上传GitHub 到目前为止，我们所做的个人博客还仅仅只能是本地查看，不能让其他人看到，那怎么能出去装呢，所以我们这时候可以使用 Github Pages这项功能来实现，并且我们也可以将源代码上传到github上，这样就可以预防当我们换设备之后也可以很快的获取原来的文件，而不用重新再弄一次。 创建仓库 新建一个名为你的用户名.github.io 的仓库，如果你的 github 用户名是 test，那么你就新建 test.github.io 的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 http://test.github.io 了。 然后再创建一个存储博客源代码的仓库，这个仓库的命名没有任何要求，甚至仓库的状态是公开还是私密都没有什么影响。 因为我们没有勾选自动生成README.md文件，所以仓库一创建，就会告诉你不同情况如何上传文件。 配置秘钥以及git 配置秘钥 进入终端，创建SSH key，（我是linux系统下，不同系统在这一步有不同设置） # 进入.ssh文件夹 cd ~/.ssh # 生成秘钥文件（邮箱地址可写可不写） ssh-keygen -t rsa -C \"你的邮箱地址\" # 查看生成的秘钥文件 cat ~/.ssh/id_rsa.pub # 复制秘钥 复制好生成的秘钥之后，回到github上，进入settings里面，点击左边栏中的SSH and GPG keys，进去之后，点击右上角的New SSH key 进去之后，将生成的内容复制进去，点击Add SSH key。 至此，ssh的配置就完成了，接下来就需要配置一下git。 配置git 进入终端，执行以下命令 # 配置用户名 git config --global user.name \"Your Name\" # 配置邮箱 git config --global user.email \"Your Email\" 如果你有多个git账号，可以不加--global这个属性，不加这个属性就不会全局应用。 测试 当我们全部都弄完之后，进入终端执行以下命令，查看返回的信息。 ssh -T git@github.com 当返回如下信息，就证明配置成功了。 上传文件 GitHub Pages部署 将本地的文件部署到GIthub，需要先修改根目录下的_config.yml文件，滑到最底部，修改deploy。 修改之后，还需要安装一个插件才能上传 npm install hexo-deployer-git --save 安装玩插件之后，执行以下命令即可完成。 # 清除缓存 hexo clean # 重新生成文件 hexo g # 发布 hexo d 完成之后，在浏览器中输入https://your.github.io，查看是否发布成功。 源文件上传 源文件上传就比较简单了，直接根据仓库给出的命令执行一次即可。 如果你想要从github中下载源文件使用，只需要git clone 项目地址，下载下来之后使用 hexo init 格式化文件夹和npm install下载依赖。 到此，这篇文章的内容就结束了。 \u003c本文完\u003e 本文参考文档ConstOwn ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/:2:3","tags":null,"title":"创建Hexo博客之Hexo安装","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8Bhexo%E5%AE%89%E8%A3%85/"},{"categories":["Hexo"],"content":"前言 Hexo是一款基于Node.js的静态博客生成器。他可以帮助用户快速、轻松地创建并部署自己的博客网站。 Hexo的主要特征包括以下几点： 快速：Hexo采用了缓存机制和异步渲染技术，生成速度非常快； 简单易用：Hexo的配置非常简单，它支持大量的主题和插件，使得用户可以快速打造自己的个性化博客； Markdown支持： Hexo支持使用Markdown语法来编写文章，并且可以直接在命令行界面预览效果； 多平台支持：Hexo可以发布到多种平台，例如：Github Pages、HeroKu以及Netlity等等； 插件丰富：Hexo有大量的插件可以供选择，如SEO优化、社交分享等，可以很大程度上满足用户的各种需求； 总而言之，Hexo是一款非常优秀的博客生成器，它能够让用户快速地创建自己的博客网站，并提供了十分丰富的主题和插件来满足用户的需求。 ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87/:1:0","tags":null,"title":"创建Hexo博客之前期准备","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87/"},{"categories":["Hexo"],"content":"安装准备 在安装Hexo之前，我们必须保证自己的设备中存在以下软件：git（版本控制器）、node（运行环境）以及可以使用 npm 或者是 cnpm （包管理工具）； 如果已经有则可以进行下一步操作，如果设备中不存在或缺少可以点击下方链接进行跳转。 git：请点击此链接； node：请点击此链接 npm或cnpm：npm是当你安装好node之后就自动拥有的，我们需要的是对npm进行淘宝镜像的配置；cnpm是一个完整的npmjs.org镜像，由于npm的服务器是国外的，需要进行配置，因此cnpm便应运而生，用法都是差不多的，只是需要先下载后配置再使用。 # 1.临时使用 npm --registry https://registry.npm.taobao.org install express # 2.持久使用 npm config set registry https://registry.npm.taobao.org # 2.1. 配置后可通过下面方式来验证是否成功 npm config get registry # 3. 通过cnpm使用 npm install -g cnpm --registry=https://registry.npm.taobao.org # 3.1. 使用 cnpm install express \u003c本文完\u003e ","date":"2023-04-19","objectID":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87/:2:0","tags":null,"title":"创建Hexo博客之前期准备","uri":"/%E5%88%9B%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%89%8D%E6%9C%9F%E5%87%86%E5%A4%87/"},{"categories":["Obsidian"],"content":"前言 总所周知，obsidian是一款笔记软件，在我看来它最大的优点之一就是自定义性强，几乎可以说一千个人使用obsidian就有一千种不同的obsidian，之所以可以实现这样的操作，也是源于它拥有众多的插件，但是令人很困扰的是，obsidian中的插件中的语言很多都是英文的，对于我这种英文不是很好的人来说，简直是噩梦，但是没有办法，又由于obsidian的插件界面是不能进行复制的，所以要么就是截图进行翻译，要么就是手敲英文进行翻译，也打算更换软件，但是用来用去，还是觉得obsidian更适合我一些。 在某一天我刷B站的时候刷到一位大佬的视频，视频中讲解了如何使用大佬制作的软件进行对obsidian插件的汉化，这令我十分感兴趣，因此我根据大佬给出的信息，成功从大佬这里获取到了这款汉化软件，怀着激动的心使用了这款软件，但是随着我使用的时间增长，发现大佬给出的软件依旧不能满足我所有的预想，因为每一款插件的main.js文件中的信息是不同的，因此这个软件有时候无法识别完整或是无法识别，但功夫不负有心人，我又刷到了一个比较笨的方法，那就是自己对main.js进行细微的修改，因此接下来就好好记录一下汉化的过程。 ","date":"2023-04-10","objectID":"/obsidian%E6%8F%92%E4%BB%B6%E6%B1%89%E5%8C%96/:0:1","tags":null,"title":"Obsidian插件汉化","uri":"/obsidian%E6%8F%92%E4%BB%B6%E6%B1%89%E5%8C%96/"},{"categories":["Obsidian"],"content":"步骤 首先确保自己能够实现访问obsidian的第三方插件市场并下载插件，如果没有魔法的话，可以去下载一款名为[Watt Toolkit](Watt Toolkit - 瓦特工具箱(Steam++官网) (steampp.net))的软件。下载好所需要的插件之后，就可以进行汉化操作了。由下图可知现在还是没有进行汉化的，插件的界面还是英文的。 不要着急，找到你存储这些插件的位置，使用vscode或者其他能打开js文件并带有查找功能的软件来打开main.js文件，（这里我使用vscode）这里建议记得在修改main.js文件之前复制粘贴一份，作为备份，因为可能在修改中会出现问题导致插件失效或是不想要汉化之后的样子了，这样就可以直接使用旧版本来恢复。 接下来的操作就简单多了，只用使用软件自带的查找功能找到插件页面上的英文进行修改即可。例如，上面的’Bind tab to table navigation'，使用查找功能发现它在文件的23975行，找到之后将其翻译之后再复制回去，依次类推 需要额外注意的是，有时候你搜索关键词，可能会出现多个，不要盲目的修改，可以查看前面是否有'.setName’或者是'.setDesc’以及’name’等等一些关键词，如果在中间使用'+‘号来进行连接的，切记不要将里面的加号去除，例如Advanced Tables这款插件就是这样的，同样有时候可能在汉化的途中发现文本里面掺杂着代码，不要翻译代码，直接翻译代码前面的文本即可，如果代码后面也有，也进行翻译。 如果你在查找搜索中发现它定位的地方没有显示name、.setName、.setDesc等等时，先不要激动，直接进行修改，然后重启obsidian进行查看，是否生效了或是否出错了，如果出错了就直接使用撤回功能撤回刚刚的修改即可。 最后温馨提示一句，此方法不是永久生效的，也就是说如果插件进行了更新，你所汉化的内容就会重置，也就是说会变回英文，所以需要我们记得另外保存一份已经修改好的main.js文件。 我也会不定时的更新一部分汉化好的插件的main.js文件，有需要的还请自行下载，下载完之后记得修改文件的名字为main.js！！！ ","date":"2023-04-10","objectID":"/obsidian%E6%8F%92%E4%BB%B6%E6%B1%89%E5%8C%96/:0:2","tags":null,"title":"Obsidian插件汉化","uri":"/obsidian%E6%8F%92%E4%BB%B6%E6%B1%89%E5%8C%96/"},{"categories":["hugo"],"content":"前言 在前面我们使用 hugo 的 even 主题搭建了一个个人博客，本教程是为了记录 hugo 博客更换主题。 ","date":"2023-03-22","objectID":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/:1:0","tags":null,"title":"Hugo个人博客更换主题","uri":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"},{"categories":["hugo"],"content":"具体流程 ","date":"2023-03-22","objectID":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/:2:0","tags":null,"title":"Hugo个人博客更换主题","uri":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"},{"categories":["hugo"],"content":"下载其他主题 首先需要申明的是本次是将 even 主题更换为 LoveIt ,其次在更换主题是需要注意有部分主题文件中不包含 .toml 文件，可能使用的是 .yml 类型的文件，如果遇见此类的主题文件需要进行转换，可以到这个链接去转换Yaml to Toml，当然如果你是第一安装可以使用如下命令进行设置，hugo new site \u003cname of site\u003e -f yml，需要注意的是这里的 Hugo 的版本是要大于等于 0.83.0的。 主题的寻找可以去浏览器中搜索 “Hugo Themes”，也可以直接点链接跳转过去Hugo Themes，找到自己心仪的主题之后点击主题，选择下载，需要注意的是，主题所有的源文件都是在 GitHub 中，因此需要保证自己可以连接的上 GitHub 。 选好主题之后，我为了方便区分，创建了一个新的站点，也可以不用创建新的站点，直接将新主题下载到老站点中。 特别需要注意的是，如果你下载的主题的主题配置文件是 .yml开头的，必须要重新创建一个新站点，因为 Hugo 默认是创建 .toml 的。 #创建新的站点（不创建新站点的跳过） hugo new site MyBlog #（这是主题配置文件后缀为.yml的用户使用的） hugo new site MyBlog -f yml #下载新主题 git clone https://github.com/dillonzq/LoveIt.git /themes/LoveIt ","date":"2023-03-22","objectID":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/:2:1","tags":null,"title":"Hugo个人博客更换主题","uri":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"},{"categories":["hugo"],"content":"配置主题 配置主题这一部分格外的重要，我之前在这一步卡了一两个小时，因为 LoveIt 这个主题跟之前的 even 主题存在很大的区别，例如，even 主题只需要我们将位于/even/exampleSite/config.toml 文件里面的内容全部复制到根目录下的 config.toml 中就可以运行了，但是在 LoveIt 中就不是这一回事了，在 Loveit 这个主题文件下有两个 config.toml ，一个是在主题的/exampleSite 文件夹中，一个是在主题文件夹下面。 里面的内容大致是一样的，我分别复制了这两个文件里面的内容进去，运行hugo server 的时候发生错误，后面我是直接复制官方博客里面的配置文件才运行成功的。 baseURL = \"http://example.org/\" # [en, zh-cn, fr, ...] 设置默认的语言 defaultContentLanguage = \"zh-cn\" # 网站语言, 仅在这里 CN 大写 languageCode = \"zh-CN\" # 是否包括中日韩文字 hasCJKLanguage = true # 网站标题 title = \"我的全新 Hugo 网站\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" [params] # LoveIt 主题版本 version = \"0.2.X\" [menu] [[menu.main]] identifier = \"posts\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" name = \"文章\" url = \"/posts/\" # 当你将鼠标悬停在此菜单链接上时, 将显示的标题 title = \"\" weight = 1 [[menu.main]] identifier = \"tags\" pre = \"\" post = \"\" name = \"标签\" url = \"/tags/\" title = \"\" weight = 2 [[menu.main]] identifier = \"categories\" pre = \"\" post = \"\" name = \"分类\" url = \"/categories/\" title = \"\" weight = 3 # Hugo 解析文档的配置 [markup] # 语法高亮设置 (https://gohugo.io/content-management/syntax-highlighting) [markup.highlight] # false 是必要的设置 (https://github.com/dillonzq/LoveIt/issues/158) noClasses = false 需要注意的是，官方教程文档有两个，一个是英文版的一个是中文版的，两个版本都是一样的，在这里我推荐习惯中文的朋友在修改网站配置文件的时候可以看看宋涛的博客,他是在原有的基础上进行了一些修改，也是可以成功的。 以下是网站配置示例文件，可以根据此文件里面的配置来修改你的配置文件，需要提前申明的是，里面的配置项均为默认值，只需要修改需要的地方即可。 [params] # LoveIt 主题版本 version = \"0.2.X\" # 网站描述 description = \"这是我的全新 Hugo 网站\" # 网站关键词 keywords = [\"Theme\", \"Hugo\"] # 网站默认主题样式 (\"light\", \"dark\", \"auto\") defaultTheme = \"auto\" # 公共 git 仓库路径，仅在 enableGitInfo 设为 true 时有效 gitRepo = \"\" # 哪种哈希函数用来 SRI, 为空时表示不使用 SRI # (\"sha256\", \"sha384\", \"sha512\", \"md5\") fingerprint = \"\" # 日期格式 dateFormat = \"2006-01-02\" # 网站图片, 用于 Open Graph 和 Twitter Cards images = [\"/logo.png\"] # 应用图标配置 [params.app] # 当添加到 iOS 主屏幕或者 Android 启动器时的标题, 覆盖默认标题 title = \"LoveIt\" # 是否隐藏网站图标资源链接 noFavicon = false # 更现代的 SVG 网站图标, 可替代旧的 .png 和 .ico 文件 svgFavicon = \"\" # Android 浏览器主题色 themeColor = \"#ffffff\" # Safari 图标颜色 iconColor = \"#5bbad5\" # Windows v8-10磁贴颜色 tileColor = \"#da532c\" # 搜索配置 [params.search] enable = true # 搜索引擎的类型 (\"lunr\", \"algolia\") type = \"lunr\" # 文章内容最长索引长度 contentLength = 4000 # 搜索框的占位提示语 placeholder = \"\" # 最大结果数目 maxResultLength = 10 # 结果内容片段长度 snippetLength = 50 # 搜索结果中高亮部分的 HTML 标签 highlightTag = \"em\" # 是否在搜索索引中使用基于 baseURL 的绝对路径 absoluteURL = false [params.search.algolia] index = \"\" appID = \"\" searchKey = \"\" # 页面头部导航栏配置 [params.header] # 桌面端导航栏模式 (\"fixed\", \"normal\", \"auto\") desktopMode = \"fixed\" # 移动端导航栏模式 (\"fixed\", \"normal\", \"auto\") mobileMode = \"auto\" # 页面头部导航栏标题配置 [params.header.title] # LOGO 的 URL logo = \"\" # 标题名称 name = \"\" # 你可以在名称 (允许 HTML 格式) 之前添加其他信息, 例如图标 pre = \"\" # 你可以在名称 (允许 HTML 格式) 之后添加其他信息, 例如图标 post = \"\" # 是否为标题显示打字机动画 typeit = false # 页面底部信息配置 [params.footer] enable = true # 自定义内容 (支持 HTML 格式) custom = '' # 是否显示 Hugo 和主题信息 hugo = true # 是否显示版权信息 copyright = true # 是否显示作者 author = true # 网站创立年份 since = 2019 # ICP 备案信息，仅在中国使用 (支持 HTML 格式) icp = \"\" # 许可协议信息 (支持 HTML 格式) license = '\u003ca rel=\"license external nofollow noopener noreffer\" href=\"https://creativecommons.org/licenses/by-nc/4.0/\" target=\"_blank\"\u003eCC BY-NC 4.0\u003c/a\u003e' # Section (所有文章) 页面配置 [params.section] # section 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # List (目录或标签) 页面配置 [params.list] # list 页面每页显示文章数量 paginate = 20 # 日期格式 (月和日) dateFormat = \"01-02\" # RSS 文章数目 rss = 10 # 主页配置 [params.home] # RSS 文章数目 rss = 10 # 主页个人信息 [params.home.profile] enable = true # Gravatar 邮箱，用于优先在主页显示的头像 gravatarEmail = \"\" # 主页显示头像的 URL avatarURL = \"/images/avatar.png\" # 主页显示的网站标题 (支持 HTML 格式) title = \"\" # 主页显示的网站副标题 subtitle = \"这是我的全新 Hugo 网站\" # 是否为副标题显示打字机动画 typeit = true # 是否显示社交账号 social = true # 免责声明 (支持 HTML 格式) disclaimer = \"\" # 主页文章列表 [params.home.posts] enable = true # 主页每页显示文章数量 paginate = 6 # 被 params.page 中的 hiddenFromHomePage 替代 # 当你没有在文章前置参数中设置 \"hiddenFromHomePage\" 时的默认行为 defaultHiddenFromHomePage = false # 作者的社交信息设置 [params.soci","date":"2023-03-22","objectID":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/:2:2","tags":null,"title":"Hugo个人博客更换主题","uri":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"},{"categories":["hugo"],"content":"博客内容设置以及一些 Shortcode 配置 内容设置 当我们将上面的配置全部修改放入自己的配置文件 config.toml 之后，还可以针对一些配置进行详细的配置，教程文档中已经详细说明，本篇文章就不对此展开详细说明了，如有需要，可以访问上方链接进行跳转。 Shortcode 配置 首先需要声明的是针对与 Shortcode 我只是配置了关于 music 的，其余的我暂时没有进行配置。 由于不知道为什么代码也会被识别运行，因此该部分代码全为截图，还请谅解!!! 当我们想要在博客中添加 music 时，官方也给出了解决方法，那就是使用 music shortcode ，在官方文档中给出了三种使用 music shortcode 的方法，这里简单的介绍一下。 自定义音乐 URL 第一种方法支持本地资源的引用，也就是说该方法适用于你本地就存在有歌曲。 此方法有四个参数，分别是：server 【音乐的链接】、type【音乐的名字】、artist【音乐的创作者】、cover【音乐的封面】，其中 server 是必需的参数，其余的三个都是可选参数。 音乐平台 URL 的自动识别 第二种方法支持自动识别音乐平台的 URL ，该方法只有一个参数，那就是 auto【自动识别音乐平台的 URL 】 参数，需要注意的是，该方法中的参数并不是必须要写出来的，也就是说可以忽略不写，只需要将数值写进去即可。 自定义音乐平台、类型以及 ID 第三种方法，该方法的自定义性高，支持五种不同的平台以及不同的歌曲方式，该方法有三个参数，分别是 server【音乐平台】、type【音乐类型】、id【音乐ID】，这三个参数的位置不能发生改变，但是跟第二种方法一样，都可以不写参数名，只需要写参数值就可以了。 server 参数可以填（“netease, tencent，kugou ”）; type 参数可以填（“song, playlist,album,search,artist”）; id 参数可以填（“单曲 ID ，歌单 ID ，专辑 ID ，搜索关键词 ID ， 歌手 ID ”） 其他参数 music shortcode 除了上面三种方式里面的参数外，还有一些额外的参数可以供我们选择，例如： theme：音乐播放器的主题颜色，默认值是 #448aff； fixed: 是否开启固定模式，默认是 false； mini：是否开启迷你模式，默认是false； autoplay：是否自动播放音乐，默认值是false； volume：第一次打开浏览器的默认音量，会被保存到浏览器缓存当中，默认值是0.7； mutex：是否自动暂停其他播放器，默认是true； 以上是针对上面三种播放器模式都生效的参数，下面是只针对于音乐列表的参数，例如： loop：音乐列表的循环模式，默认值是none（none，one，all）； order：音乐列表的播放顺序，默认值是list（list，random）； list-folded：初次打开时音乐播放器是否折叠，默认值是false； list-max-height：音乐列表的最大高度，默认值是340px； 总结 第一种方法不限平台，只要能本地有歌曲即可播放，后面两种方法都限制平台，经过试验，发现网易云音乐适配所有参数，不管是单曲、歌单、专辑、搜索关键词还是歌手都可以使用，而其他的基本不能使用，或者说并不能很轻松的使用。 如果觉得这三种方法都不是很好，可以看看我之前写的一篇文章，也是添加音乐播放器的，如果感兴趣的可以点击链接跳转过去，如果此内容无法看到图片可以点击这个链接跳转过去看。 三种方法都需要放在源文件 markdown 文件中。 ","date":"2023-03-22","objectID":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/:2:3","tags":null,"title":"Hugo个人博客更换主题","uri":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"},{"categories":["hugo"],"content":"上传 上传的步骤跟前面其实是一样的，只需要我们将之前创建好的 “yourname.github.io”仓库内容清空，然后重新上传一份到 对应的仓库即可，或者可以直接覆盖（我没试过，但是听别人介绍是可以的），如果觉得之前主题或许还有用的，可以保存之前的主题仓库，重新新建一份对应的仓库即可。 如果你是将域名解析到 GitHub 中的话，只需要重新添加一份 A 记录和CAMNE 记录即可，如果你是跟我一样是使用 Vercel 的，那么就要去 Vercel 重新弄一次了，如果不会的，可以看看我之前发的教程。 至此，hugo 博客更换主题就到此结束了。 \u003c本文完\u003e 参考教程：宋涛的博客和官方安装文档 ","date":"2023-03-22","objectID":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/:2:4","tags":null,"title":"Hugo个人博客更换主题","uri":"/hugo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98/"},{"categories":["Notion"],"content":"前言 当今个人博客盛行，人们都想要有一个属于自己的个人博客，但是很多人苦于没有编程基础或不想使用代码来制作一个个人博客，但好在现在有一种方式可以不用敲一行代码就可以制作出一个属于自己的个人博客，只需要有一个Notion账号，Github账号以及Vercel账号就可以实现了。那么废话就不多说了，开始本次的教程吧！ ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/:1:0","tags":null,"title":"Notion创建个人博客之项目托管Vercel","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/"},{"categories":["Notion"],"content":"开发流程 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/:2:0","tags":null,"title":"Notion创建个人博客之项目托管Vercel","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/"},{"categories":["Notion"],"content":"克隆项目 首先我们需要有一个github账号，如果没有也可以先打开github页面再进行注册登录。 登陆之后，我们在左上角输入NotionNext搜索，也可以点击此链接直接跳转到NotionNext，然后点击右上角的Fork按钮，在下拉菜单中选择Create Fork，这样就会拷贝一份代码到你的github中。 这份代码就是我们将Notion搭建为个人博客网站的关键，这个NotionNext调用了Notion的API来展示Notion的页面，同时也提供了一些主题和特效来定制化我们自己的个人网站效果。 对于这份代码仓库，我们基本可以不用做什么改动，只需要对blog.config.js这份文件进行修改，因为这份文件是所有主题特效的详细配置文件。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/:2:1","tags":null,"title":"Notion创建个人博客之项目托管Vercel","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/"},{"categories":["Notion"],"content":"托管Vercel平台 首先我们依旧需要一个Vercel账号，如果没有Vercel的账号，可以直接在浏览器中输入https://vercel.com/，也可以直接点击Vercel，进行登录，温馨提示：建议使用github账号注册，这样方便我们从github仓库中导入NotionNext。 登录之后我们需要做的第一件事就是新建项目，点击New Project， 导入git仓库，可以全部导入，也可以指定导入的仓库。 在仓库列表中选择NotionNext并点击Import。 Import之后，我们基本上没有什么需要修改的了，只需要我们在Environment variables中添加一条记录即可。Name：NOTION_PAGE_ID Values：34889e026fc44f7eb074c3847a052020。 这里的值是我们从Notion里发布出去的链接中的中间部分，也就是这一部分 弄好之后点击Deploy进行部署，等待几分钟，就可以部署成功了 然后点击Vist，可能会出现访问不上的问题，但是没关系，我们可以申请域名来绑定个人网站，这样我们就可以访问了。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/:2:2","tags":null,"title":"Notion创建个人博客之项目托管Vercel","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/"},{"categories":["Notion"],"content":"简易博客配置 进入github仓库找到我们刚刚克隆下来的NotionNext，进入仓库找到blog.config.js文件进行修改，特别注意的是，我们在GItHub上的修改是不需要到Vercel上再次部署的，Vercel会监听github上的修改，自动自行部署的。 点击blog.config.js文件 点击右上角的笔的图标，这样就可以进行修改了，主要看个人喜好，以下是我个人配置。 修改主题 THEME: process.env.NEXT_PUBLIC_THEME || 'hexo', // 主题， 支持 ['next','hexo',\"fukasawa','medium','example'] @see https://preview.tangly1024.com 修改个人信息 AUTHOR: process.env.NEXT_PUBLIC_AUTHOR || 'Chen', // 您的昵称 例如 tangly1024 BIO: process.env.NEXT_PUBLIC_BIO || '一个迷茫的摆烂人', // 作者简介 LINK: process.env.NEXT_PUBLIC_LINK || 'https://tangly1024.com', // 网站地址 修改特效是否开启 // 鼠标点击烟花特效 FIREWORKS: process.env.NEXT_PUBLIC_FIREWORKS || true, // 开关 // 烟花色彩，感谢 https://github.com/Vixcity 提交的色彩 FIREWORKS_COLOR: ['255, 20, 97', '24, 255, 146', '90, 135, 255', '251, 243, 140'], // 樱花飘落特效 SAKURA: process.env.NEXT_PUBLIC_SAKURA || true, // 开关 是否开启音乐插件 MUSIC_PLAYER: process.env.NEXT_PUBLIC_MUSIC_PLAYER || true, // 是否使用音乐播放插件 修改完之后滑到最下端，点击Commit changes，保存修改。 等待几分钟，让Vercel自动部署网站，之后我们可以访问网站查看效果。 我们可以发现修改已经生效了。 \u003c本文完\u003e 本文至此就结束了，如果还有不懂的可以看码农在新加坡的教程。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/:2:3","tags":null,"title":"Notion创建个人博客之项目托管Vercel","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E6%89%98%E7%AE%A1vercel/"},{"categories":["Notion"],"content":"前言 当今个人博客盛行，人们都想要有一个属于自己的个人博客，但是很多人苦于没有编程基础或不想使用代码来制作一个个人博客，但好在现在有一种方式可以不用敲一行代码就可以制作出一个属于自己的个人博客，只需要有一个Notion账号，Github账号以及Vercel账号就可以实现了。那么废话就不多说了，开始本次的教程吧。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/:1:0","tags":null,"title":"Notion创建个人博客之个人博客项目绑定域名","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Notion"],"content":"具体流程 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/:2:0","tags":null,"title":"Notion创建个人博客之个人博客项目绑定域名","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Notion"],"content":"获取域名 获取域名的方式有两种，第一种就是付费域名（可以在浏览器中输入https://wanwang.aliyun.com/，也可以点击阿里云，另一种就是免费域名（可以在浏览器中输入http://freenom.com/，可以点击Freenom，需要注意的是Freenom现在服务器不稳定，不知道还能不能使用了，至少我这几天都无法使用。 使用阿里云的，需要注册登录之后，在域名注册页面上输入自己喜欢的名字，然后点击查询域名，下面就会出现很多域名以及价钱，有些域名已经被人注册了，尽量选择没有被注册的，当然也可以选择通过平台去购买那些被注册且注册者愿意出售的域名，选择好了之后就可以进行支付。 温馨提示：第一次购买域名，需要进行实名认证，并且还需要你制作一份模板进行审核，时间不确定，因为这份模板需要给注册局进行审核，因此时间不确定，可能二十多分钟就可以了，也可以一个多小时，第二次购买的时候也需要进行实名认证，但是时间会短一些，十分钟左右就可以了。 使用Freenom的，也需要注册登录，在登陆之后点击Service -\u003eRegister a New Domain，然后输入你想要注册的域名，点击Check Availability，然后进行购买。 温馨提示：Freenom的最长免费期限是一年，选择Checkout，然后选择免费期限，点击购买，即可成功购买。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/:2:1","tags":null,"title":"Notion创建个人博客之个人博客项目绑定域名","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Notion"],"content":"DNS解析 虽然我们已经购买了域名，但是我们依旧需要进行域名解析之后才能够使用。如果我们是在阿里云上购买的话，阿里云自身就配有域名解析，因此我们可以直接找到域名解析进行操作。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/:2:2","tags":null,"title":"Notion创建个人博客之个人博客项目绑定域名","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Notion"],"content":"绑定Vercel（阿里云） 在阿里云上进行域名解析需要我们进行域名列表，找到我们想要解析的域名，选择解析操作，这里可能会存在一个问题就是域名的状态显示有问题，一般都是因为DNS服务器设置不正确，它会给出两个正确的DNS服务器，不过一般来说不会出现这个问题，如果出现问题了可以先刷新然后看是否解决了，如果没有解决就根据上面给出的DNS进行修改。 当我们的域名状态显示是正常的，就可以点击操作下面的解析，然后添加记录。 绑定Vercel需要两条记录，一条A记录，一条CNAME记录，回到Vercel，点进刚刚弄好的项目选择上方的Settings，找到Domains，添加我们刚刚申请好的域名，这时候Vercel会提示我们添加一个A记录和CNAME记录。 回到阿里云的域名解析页面，添加这两条记录。首先是添加A记录 添加完A记录之后添加CNAME记录 至此，我们就添加好了，可以等待几分钟，让Vercel部署好之后，使用刚刚的域名进行访问。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/:2:3","tags":null,"title":"Notion创建个人博客之个人博客项目绑定域名","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Notion"],"content":"绑定Vercel（Freenom） 登录注册 由于Freenom里面没有配有DNS解析服务，因此我们选择DNSPod这款产品来进行域名解析，这一款产品是腾讯云旗下的品牌，可以使用腾讯登录。 添加域名 会提示需要设置正确的DNS服务器，因为你的域名没有设置DNS服务器，也就是没有授权DNS服务器解析你的域名。 设置DNS服务器 提示需要设置正确的DNS服务器，这里是需要回到刚才的购买域名的网站freenom来绑定域名解析的地址。（绑定了之后才能授权DNSPod解析你的域名） 点击 My Domains\u003eManage Domains\u003eManagement Tools\u003eNameservers 绑定Vercel 回到dnspod, 重新验证，状态会变成无记录。意味着域名和DNS服务商已经绑定成功。 现在域名设置成功了，还没有域名解析记录。 域名绑定到网站需要添加两条记录，一条A记录，一条CNAME记录。 回到你的vercel，点击你的项目-\u003eSettings\u003eDomains 添加你刚申请的域名，会提示你添加一条A记录和CNAME记录，这时候我们回到DNSPod，添加这两条记录即可，添加过程跟阿里云的大同小异。添加完之后，等待几分钟，让Vercel自动部署一下，直接输入域名进行测试。 \u003c本文完\u003e 本文至此就结束了，如果还有不懂的可以看码农在新加坡的教程。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/:2:4","tags":null,"title":"Notion创建个人博客之个人博客项目绑定域名","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%94%B3%E8%AF%B7%E5%9F%9F%E5%90%8D%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Notion"],"content":"前言 当今个人博客盛行，人们都想要有一个属于自己的个人博客，但是很多人苦于没有编程基础或不想使用代码来制作一个个人博客，但好在现在有一种方式可以不用敲一行代码就可以制作出一个属于自己的个人博客，只需要有一个Notion账号，Github账号以及Vercel账号就可以实现了。那么废话就不多说了，开始本次的教程吧！ ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/:1:0","tags":null,"title":"Notion创建个人博客之创建个人主页","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"},{"categories":["Notion"],"content":"背景知识 Notion账号：Notion是一款功能强大的效率软件，现在也有很多的使用量，它在日常中极大的方便了我们的生活，提高了我们的效率，以及能很好的帮助我们管理我们的日常生活、学习以及工作中的等等事项，并且它也支持团队协作，是一款不可多得的好软件。 Github账号：个人网站的主题是通过Github的NotionNext 项目来实现和配置的，有着丰富的展示效果，比如布局，主题，文章目录，添加音乐，评论系统等等。 Vercel账号：是一个托管平台，负责部署NotionNext项目，来最终显示你的个人网站。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/:2:0","tags":null,"title":"Notion创建个人博客之创建个人主页","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"},{"categories":["Notion"],"content":"具体操作流程 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/:3:0","tags":null,"title":"Notion创建个人博客之创建个人主页","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"},{"categories":["Notion"],"content":"获取模板 首先我们需要有一个Notion账号，在浏览器中输入notion的官网地址：https://notion.so/登录，如果没有账号的，也可以在此页面进行注册（注册可以用自己的email地址也可以使用goole账号进行注册）之后再登录。 登录之后，打开notion模板获取模板文件，点击进去之后我们可以看到 点击框起来的链接，这时会跳转到模板页面，选择右上角的Duplicate，将模板克隆到自己的Notion账号中。 将模板克隆下来之后，我们可以直接点击页面右上角的Share，选择Share to web，也可以在进行修改之后再发布出去。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/:3:1","tags":null,"title":"Notion创建个人博客之创建个人主页","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"},{"categories":["Notion"],"content":"模板解释以及模板操作 在修改模板文件之前，先简单的介绍一下各列的意思 type:在这一列中，Post表示博客，Page表示菜单，包含归档、留言以及友链等等，Notice表示公告； status：在这一列中，Published表示已发布出去的，Invisible表示不可见的，Draft表示草稿，我们可以根据这个来自由的修改文章的状态； title：在这一列中，我们可以进行简短的文章介绍，点击Open就可以打开页面进行编辑； slug：这一列是指链接后缀名，因为不填写这个，notion就会随机生成一个字符串，随机生成的字符串杂乱无序，不方便我们阅读,当然了，一定不能重复，一旦重复就会重复显示。 介绍完了主要的模板列的意思之后，那么就会有人问了，怎么添加新的页面呢？很简单，只需要我们点击下面的+ New就可以生成新的一行，也就是生成一篇新博客，然后只需要根据我们的需求来修改每一列的信息就好了，找到title列点击open就可以编辑博客的具体内容了，notion支持Markdown语法，同时它也支持“/”命令来进行更多的操作，例如生成待办事项、表格、插入链接等等。 制作好一遍新的博客，那怎么发布出去呢，我们可以直接点击右上角的share将页面发布出去，但是需要注意的是，这时候发布出去的页面是跟你编辑的页面一样的，也就是不会有任何的主题，也不支持域名自定义，因为这仅仅只是使用notion自带的页面分享功能，还需要github和vercel的支持。 \u003c本文完\u003e 本文至此就结束了，如果还有不懂的可以看码农在新加坡的教程。 ","date":"2023-03-20","objectID":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/:3:2","tags":null,"title":"Notion创建个人博客之创建个人主页","uri":"/notion%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E4%B8%BB%E9%A1%B5/"},{"categories":["hugo"],"content":"前言 我们创建好个人博客之后，或许我们会觉得只是纯文本阅读太过于的单调了，如果这时候可以有音乐播放就更好了，如果你有这方面的需求，那么就请跟我一起来进行简单的代码来实现这个需求吧。 本文博客是基于hugo搭建，不确保是否支持其他类型的，例如hexo。 ","date":"2023-03-20","objectID":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/:1:0","tags":null,"title":"个性化个人博客之音乐播放器","uri":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"},{"categories":["hugo"],"content":"具体流程 ","date":"2023-03-20","objectID":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/:2:0","tags":null,"title":"个性化个人博客之音乐播放器","uri":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"},{"categories":["hugo"],"content":"第一种方法 首先声明该方法不能实现音乐播放器一直显示在页面上，只有滑动到特定区域才可以显示出来，例如我将其插入博客页面的最底部，那么该播放器也只会出现在底部，不会出现在其他的地方。 \u003ciframe frameborder=\"no\" border=\"0\" marginwidth=\"0\" marginheight=\"0\" width=330 height=110 src=\"// music.163.com/outchain/player?type=0\u0026id=2896870368\u0026auto=1\u0026height=90\"\u003e\u003c/iframe\u003e 特别提醒的是，我们可以根据实际情况修改width和height的值，如果当你出现播放器与侧边栏的菜单图片有冲突的话，可以考虑将border的参数删除试试。 如何更换歌曲 更改歌曲只需要将代码中的music.163.com/outchain/player?type=0\u0026id=2896870368后面的数字2896870368换成你自己的id。 获取歌曲ID 如何找到这个id，需要你进入网易云官网，搜相关的歌曲，截取playlist?id后面的数值 此方法不适用添加单独的歌曲！！！ 实现效果图 ","date":"2023-03-20","objectID":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/:2:1","tags":null,"title":"个性化个人博客之音乐播放器","uri":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"},{"categories":["hugo"],"content":"第二种方法 首先声明该方法是在博客的底部添加音乐组件，并且可以自定是否自动播放和是否开启歌词功能以及是否固定在左下角不动。 \u003c!-- 为博客底部添加音乐组件 --\u003e \u003cdiv id=\"player\" class=\"aplayer\"\u003e\u003c/div\u003e \u003clink href=\"https://files.cnblogs.com/files/shwee/APlayer.min_v1.10.1.css\" rel=\"stylesheet\"\u003e \u003cscript src=\"https://files.cnblogs.com/files/shwee/APlayer.min_v1.10.1.js\"\u003e\u003c/script\u003e \u003cscript type=\"text/javascript\"\u003e var ap = new APlayer({ element: document.getElementById('player'), narrow: false, autoplay: false, \u003c!-- 是否自动播放 --\u003e showlrc: true, \u003c!--是否开启歌词功能 ，默认false（为true时musics集合中需要传入lrc字段。）--\u003e fixed:1,\u003c!-- 是否固定在左下角不动， 1即为true --\u003e theme: '#F5F5F5', \u003c!-- 插件背景颜色，建议和你的公告栏背景色一样，这样融为一体的感觉 --\u003e music: [{ title: '那些花儿', author: '朴树', url: 'http://music.163.com/song/media/outer/url?id=28996922.mp3', cover: \"http://p2.music.126.net/j1EJGPJ0WaudM0DBSDCY8w==/109951168111041972.jpg\", lrc:\"[00:00.000] 作词 : 朴树[00:01.000] 作曲 : 朴树[00:17.36]那片笑声让我想起[00:20.72]我的那些花儿[00:24.38]在我生命每个角落[00:28.21]静静为我开着[00:32.21]我曾以为我会永远[00:36.01]守在她身旁[00:40.11]今天我们已经离去[00:43.85]在人海茫茫[00:47.08]她们都老了吧?[00:50.76]她们在哪里呀?[00:55.23]幸运的是我[00:58.83]曾陪她们开放[01:02.99]啦.....想她[01:10.67]啦.....她还在开吗?[01:18.43]啦.....去呀[01:26.38]她们已经被风吹走[01:30.12]散落在天涯[01:33.22][01:49.61]有些故事还没讲完[01:53.47]那就算了吧[01:57.16]那些心情在岁月中[02:01.06]已经难辨真假[02:05.21]如今这里荒草丛生[02:09.06]没有了鲜花[02:13.04]好在曾经拥有你们的春秋和冬夏[02:20.29]她们都老了吧?[02:23.85]她们在哪里呀?[02:28.54]幸运的是我曾陪她们开放[02:35.83]啦.....想她[02:43.54]啦.....她还在开吗?[02:51.28]啦.....去呀[02:59.42]她们已经被风带走[03:03.20]散落在天涯[03:06.82]啦……[03:14.54]啦……[03:22.42]啦……[03:30.02]……[04:01.98]人们就像被风吹走插在了天涯[04:08.66]她们都老了吧?[04:12.26]她们还在开吗？[04:16.74]我们就这样[04:20.74]各自奔天涯[04:25.16]\" } ] }); ap.init(); \u003c/script\u003e 使用该方法添加音乐的方法跟上面是一样的，也是获取歌曲的ID，需要注意的是该方法是不适用添加歌单的。 如何获取lrc歌词 获取lrc歌词的方法有很多，在这里我推荐两种获取的方法，第一种打开浏览器进入这个网页lrc歌词获取，将我们需要获取lrc歌词的歌曲ID复制进去，就像这样。 另外一种就是到这个网址lrc歌词编辑器里面去搜索，这里面的所有数据均是来自于网易云。 实现效果图 ","date":"2023-03-20","objectID":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/:2:2","tags":null,"title":"个性化个人博客之音乐播放器","uri":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"},{"categories":["hugo"],"content":"第三种方法 首先声明该方法功能强大，适用多种模式，并且自动识别歌词，不需要我们手动添加lrc歌词了。 \u003clink rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/aplayer@1.10.0/dist/APlayer.min.css\"\u003e \u003cscript src=\"https://files.cnblogs.com/files/wkfvawl/APlayer.min.js\"\u003e\u003c/script\u003e \u003cdiv id=\"aplayer\" class=\"aplayer\" data-id=\"7008690471\" data-server=\"netease\" data-type=\"playlist\" data-fixed=\"true\" data-listfolded=\"true\" data-order=\"random\" data-theme=\"#F58EA8\"\u003e\u003c/div\u003e \u003cscript src=\"https://unpkg.com/meting@1.2/dist/Meting.min.js\"\u003e\u003c/script\u003e 需要注意的是，如果你复制上面的这一串代码，但是没有在博客左下角显示的话，建议修改data-id的值。如果你想根据下面的代码进行自定义，需要在前面加上data-，例如实现自动播放，需要写成data-autoplay=\"true\"。 一些参数 mini: false, //迷你模式 autoplay: false, //自动播放 theme: '#FADFA3', //主题色 loop: 'all', //音频循环播放, 可选值: 'all'全部循环, 'one'单曲循环, 'none'不循环 order: 'random', //音频循环顺序, 可选值: 'list'列表循环, 'random'随机循环 preload: 'auto', //预加载，可选值: 'none', 'metadata', 'auto' volume: 0.7, //默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 mutex: true, //互斥，阻止多个播放器同时播放，当前播放器播放时暂停其他播放器 listFolded: false, //列表默认折叠 listMaxHeight: 90, //列表最大高度 lrcType: 3, //歌词传递方式 想要自动播放的话，就添加data-autoplay=“true\"到第三行代码div后面，同时server 可选 netease（网易云音乐），tencent（QQ 音乐），kugou（酷狗音乐）。type可选 song（歌曲），playlist（歌单），album（专辑），search（搜索关键字），artist（歌手）; 实现效果图 歌单 如果想要设置歌单播放的话，只需要修改第三行div中的data-type为\"playlist\"即可，同时记得修改data-id的参数为你自己歌单的ID，获取ID的方法跟前面的一样。 单曲 如果想要自己设置歌曲播放的话，只需要修改第三行div中的data-type为\"song\"即可，同时记得修改data-id的参数为你想要的歌曲的ID，获取ID的方法跟前面的一样。 专辑 如果想要设置专辑播放的话，只需要修改第三行div中的data-type为\"album\"即可，同时记得修改data-id的参数为你想要的专辑的ID，获取ID的方法跟前面的一样。 搜索关键词 如果想要设置搜索关键词播放的话，只需要修改第三行div中的data-type为\"search\"即可，同时记得修改data-id的参数为你想要的搜索的关键词，例如想要搜索空空，就只需要将空空放进data-id中即可。 歌手 如果想要听某一位歌手的全部音乐，需要修改第三行div中的data-type为\"artist\"即可，同时记得修改data-id的参数为歌手的ID，获取歌手ID的方式跟前面的差不多，只是需要我们点进歌手的主页，复制artist?id后面的数值即可实现。 网易云音乐支持以上五种不同的方式，酷狗支持搜索关键词，建议使用网易云，同时提醒不管使用任何音乐平台，都存在VIP歌曲无法听的现象或者是VIP歌曲只能听60S。 ","date":"2023-03-20","objectID":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/:2:3","tags":null,"title":"个性化个人博客之音乐播放器","uri":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"},{"categories":["hugo"],"content":"总结 上面三种不同的方法都可以实现博客音乐播放器，但他们效果、样式以及使用效果各有不同，按需使用，不管歌单还是歌曲尽量使用网易云音乐，因为网易云音乐的id没有被隐藏，其他例如QQ音乐和酷狗音乐的歌曲id被隐藏了。 \u003c本文完\u003e 本文参考官方教程，以及博客园添加背景音乐以及播放器 或在左下方固定位置添加音乐播放器 给你的博文锦上添花，增姿添彩 ","date":"2023-03-20","objectID":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/:2:4","tags":null,"title":"个性化个人博客之音乐播放器","uri":"/%E4%B8%AA%E6%80%A7%E5%8C%96%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"},{"categories":["hugo"],"content":"前言 Hugo是一款快速，现代化且高度可配置的静态网站生成器。它是一个基于命令行的工具，用于将Markdown等文本格式转换为静态网站。Hugo使用Go语言编写，因此它非常快。Hugo的主要优点是构建速度非常快，因为它是一个静态网站生成器，没有必要运行数据库或其他服务。 使用Hugo创建个人博客的主要优势在于它非常快速、易于配置，并且生成的网站可以直接部署到任何Web服务器上，而不需要运行数据库或其他服务。此外，Hugo提供了大量的主题和插件，可以轻松地自定义您的个人博客。它还支持各种文本格式，包括Markdown，AsciiDoc和Org-mode，以及多种语言，包括中文。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/:1:0","tags":null,"title":"从零开始搭建个人博客之绑定域名","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"},{"categories":["hugo"],"content":"整体流程 写Markdown文件； 通过hugo架构提供的语法将Markdown文件编译成html文件，html文件就是在浏览器中可以展示的文件； 把编译出来的html文件发布到服务器或者网站托管平台； 就上面的三步就可以生成一个个人博客，是不是非常的简单呢，那么，跟着我一起来使用hugo搭建一个属于自己的个人博客吧。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/:2:0","tags":null,"title":"从零开始搭建个人博客之绑定域名","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"},{"categories":["hugo"],"content":"具体流程 在前面一篇文章中我们将文件托管到了Vercel，在这一篇文章中，我们需要使用域名来绑定个人博客，实现使用域名来访问博客的操作。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/:3:0","tags":null,"title":"从零开始搭建个人博客之绑定域名","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"},{"categories":["hugo"],"content":"申请域名 获取域名的方式有两种，第一种就是付费域名（可以在浏览器中输入https://wanwang.aliyun.com/，也可以点击阿里云，另一种就是免费域名（可以在浏览器中输入http://freenom.com/，可以点击此链接跳转过去，需要注意的是Freenom现在服务器不稳定，不知道还能不能使用了，至少我这几天都无法使用。 使用阿里云的，需要注册登录之后，在域名注册页面上输入自己喜欢的名字，然后点击查询域名，下面就会出现很多域名以及价钱，有些域名已经被人注册了，尽量选择没有被注册的，当然也可以选择通过平台去购买那些被注册且注册者愿意出售的域名，选择好了之后就可以进行支付。 温馨提示：第一次购买域名，需要进行实名认证，并且还需要你制作一份模板进行审核，时间不确定，因为这份模板需要给注册局进行审核，因此时间不确定，可能二十多分钟就可以了，也可以一个多小时，第二次购买的时候也需要进行实名认证，但是时间会短一些，十分钟左右就可以了。 使用Freenom的，也需要注册登录，在登陆之后点击Service -\u003eRegister a New Domain，然后输入你想要注册的域名，点击Check Availability，然后进行购买。 温馨提示：Freenom的最长免费期限是一年，选择Checkout，然后选择免费期限，点击购买，即可成功购买。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/:3:1","tags":null,"title":"从零开始搭建个人博客之绑定域名","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"},{"categories":["hugo"],"content":"DNS解析 虽然我们已经购买了域名，但是我们依旧需要进行域名解析之后才能够使用。如果我们是在阿里云上购买的话，阿里云自身就配有域名解析，因此我们可以直接找到域名解析进行操作。 绑定 Vercel （阿里云） 在阿里云上进行域名解析需要我们进行域名列表，找到我们想要解析的域名，选择解析操作，这里可能会存在一个问题就是域名的状态显示有问题，一般都是因为DNS服务器设置不正确，它会给出两个正确的DNS服务器，不过一般来说不会出现这个问题，如果出现问题了可以先刷新然后看是否解决了，如果没有解决就根据上面给出的DNS进行修改。 当我们的域名状态显示是正常的，就可以点击操作下面的解析，然后添加记录。 绑定Vercel需要两条记录，一条A记录，一条CNAME记录，回到Vercel，点进刚刚弄好的项目选择上方的Settings，找到Domains，添加我们刚刚申请好的域名，这时候Vercel会提示我们添加一个A记录和CNAME记录。 回到阿里云的域名解析页面，添加这两条记录。首先是添加A记录 添加完A记录之后添加CNAME记录 至此，我们就添加好了，可以等待几分钟，让Vercel部署好之后，使用刚刚的域名进行访问。 绑定Vercel（Freenom） 由于Freenom里面没有配有DNS解析服务，因此我们选择DNSPod这款产品来进行域名解析，这一款产品是腾讯云旗下的品牌，可以使用腾讯登录。 登录之后选择管理控制台-\u003eDNS解析-\u003e我的域名-\u003e添加域名，会提示需要设置正确的DNS服务器，因为你的域名没有设置DNS服务器，也就是没有授权DNS服务器解析你的域名。 当提示需要设置正确的DNS服务器，这里是需要回到刚才的购买域名的网站freenom来绑定域名解析的地址。（绑定了之后才能授权DNSPod解析你的域名），点击 My Domains\u003eManage Domains\u003eManagement Tools\u003eNameservers。 回到dnspod, 重新验证，状态会变成无记录。意味着域名和DNS服务商已经绑定成功。 现在域名设置成功了，还没有域名解析记录。 域名绑定到网站需要添加两条记录，一条A记录，一条CNAME记录。 回到你的vercel，点击你的项目-\u003eSettings\u003eDomains 添加你刚申请的域名，会提示你添加一条A记录和CNAME记录，这时候我们回到DNSPod，添加这两条记录即可，添加过程跟阿里云的大同小异。添加完之后，等待几分钟，让Vercel自动部署一下，直接输入域名进行测试。 然后你尝试使用域名去访问，如果正常显示，就说明已经成功了，如果显示错误，请重新检查一遍。 至此，个人博客就成功搭建。 \u003c本文完\u003e 本文参考教程：码农在新加坡的个人博客 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/:3:2","tags":null,"title":"从零开始搭建个人博客之绑定域名","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D/"},{"categories":["hugo"],"content":"前言 Hugo是一款快速，现代化且高度可配置的静态网站生成器。它是一个基于命令行的工具，用于将Markdown等文本格式转换为静态网站。Hugo使用Go语言编写，因此它非常快。Hugo的主要优点是构建速度非常快，因为它是一个静态网站生成器，没有必要运行数据库或其他服务。 使用Hugo创建个人博客的主要优势在于它非常快速、易于配置，并且生成的网站可以直接部署到任何Web服务器上，而不需要运行数据库或其他服务。此外，Hugo提供了大量的主题和插件，可以轻松地自定义您的个人博客。它还支持各种文本格式，包括Markdown，AsciiDoc和Org-mode，以及多种语言，包括中文。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E9%83%A8%E7%BD%B2vercel/:1:0","tags":null,"title":"从零开始搭建个人博客之hugo部署Vercel","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E9%83%A8%E7%BD%B2vercel/"},{"categories":["hugo"],"content":"整体流程 写 Markdown 文件； 通过hugo架构提供的语法将Markdown文件编译成html文件，html文件就是在浏览器中可以展示的文件; 把编译出来的html文件发布到服务器或者网站托管平台; 我们可以通过上面的三步生成一个只属于自己的个人博客，是不是非常的简单呢，那么，跟着我一起来使用hugo搭建一个属于自己的个人博客吧。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E9%83%A8%E7%BD%B2vercel/:2:0","tags":null,"title":"从零开始搭建个人博客之hugo部署Vercel","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E9%83%A8%E7%BD%B2vercel/"},{"categories":["hugo"],"content":"具体流程 在上一篇文章中，我们已经将hugo博客部署到Github Pages中了，这一篇博客中我们来将博客部署到Vercel平台，这时可能会有人感到疑惑了，为什么弄到了GItHub Pages中还要再弄到Vercel中，这是因为github pages在国内有时候会访问不上，并且如果你想要让百度这一类的搜索引擎将你的博客收录的话，必须再弄一个托管平台，因为Github禁止百度抓取网页，那么什么是Vercel，Vercel的优势又是什么呢。 Vercel是一个创建高性能网站和应用程序的现代平台。它支持许多编程语言和框架，并提供了许多工具和服务来简化Web开发过程。Vercel的主要优势是快速部署和构建，自动缩放，安全性高，集成了很多有用的功能，如自动SSL和CDN。 使用Vercel可以快速部署您的Hugo博客并获得许多有用的功能。例如，它提供了自动SSL，自动缩放和全球CDN，可以让您的网站访问速度更快，并提供更好的安全性。此外，您还可以获得有用的分析和监控工具，以了解您的网站的性能和使用情况。并且Vercel还支持一键导入Github、GItlab，十分的方便。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E9%83%A8%E7%BD%B2vercel/:3:0","tags":null,"title":"从零开始搭建个人博客之hugo部署Vercel","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E9%83%A8%E7%BD%B2vercel/"},{"categories":["hugo"],"content":"部署到 Vercel 目标代码托管 首先第一步，注册一个Vercel账号，这里我们直接使用 GitHub 账号进行登录，因为这样方便导入仓库。 第二步，我们新建一个项目 导入 git 仓库，可以选择导入所有仓库 选择目标文件仓库，点击 Import FRAMEWORK PRESET 选Other (因为目标文件是没有框架的)，查看无误之后点击Deploy 点击Deploy之后需要等待一下，因为它会自动检查有没有存在错误，如果没有存在错误，你就可以看到彩带烟花！ 至此，我们就完成了将目标代码托管到Vercel的操作，当然我们也可以将源代码也托管给Vercel一份，操作也是十分的简单。 源文件托管 Vercel 源码托管需要注意几点： 源代码需要发布到Github上。 public目录不能发布。（添加到 .gitignore上） 主题如果是从github下载下来的，子目录里面会有 .git 文件，发布代码的话，内层目录是不能有.git的，它会识别成另一个git仓库并忽略上传，只上传一个软链接文件。所以需要删除themes主题下面的.git文件，否则 Vercel 无法从 github上拉取到主题，编译会失败。 前面的步骤是一样的，同样的选择创建新项目，选择自己需要导入的项目仓库。 但是里面的设置存在差异，需要我们更改一些地方。 如果在构建当中出现问题，解决方法如下： 当我们看到这个的时候， 就说明我们的主题是没有发布到自己的Github中的，只是一个软链接，所以需要我们去themes目录，如果还是没有变动需要提交，重命名even提交，然后再改回来，就可以正常提交了。 #到根目录（/Document/qichenxiaoni） rm -rf .git 进入themes文件夹 mv even even1 git status git add * git commit -m \"mv\" git push mv even1 even git status git add * git commit -m \"mv\" git push 如果出现以下问题，是因为public文件已经存在，Vercel没有办法编译成目标文件，需要我们将public删除并忽略public文件提交到Github中。 mv public public2 git add public public2 git commit -m \"mv\" git push echo 'public'\u003e\u003e.gitignore mv public2 public git add public2 git commit -m \"gitignore\" git push 如果出现Error：Command \"hugo\" exited with 255的话，需要我们将BUILD COMMAND将hugo改成hugo -D –gc 进入代码托管的页面，如果左边的小窗口显示正常，就说明发布成功，则点击Visit 如果地址栏显示如这样，就说明发布成功，同样，我们可以看到Vercel给我们自动分配了一个域名。 至此我们就完成将文件托管到Vercel的全部操作。 \u003c本文完\u003e 本文参考教程：码农在新加坡的个人博客 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E9%83%A8%E7%BD%B2vercel/:3:1","tags":null,"title":"从零开始搭建个人博客之hugo部署Vercel","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E9%83%A8%E7%BD%B2vercel/"},{"categories":["hugo"],"content":"前言 Hugo是一款快速，现代化且高度可配置的静态网站生成器。它是一个基于命令行的工具，用于将Markdown等文本格式转换为静态网站。Hugo使用Go语言编写，因此它非常快。Hugo的主要优点是构建速度非常快，因为它是一个静态网站生成器，没有必要运行数据库或其他服务。 使用Hugo创建个人博客的主要优势在于它非常快速、易于配置，并且生成的网站可以直接部署到任何Web服务器上，而不需要运行数据库或其他服务。此外，Hugo提供了大量的主题和插件，可以轻松地自定义您的个人博客。它还支持各种文本格式，包括Markdown，AsciiDoc和Org-mode，以及多种语言，包括中文。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/:1:0","tags":null,"title":"从零开始搭建个人博客之hugo托管GitHubPages","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/"},{"categories":["hugo"],"content":"整体流程 写 Markdown 文件； 通过 hugo 架构提供的语法将 Markdown 文件编译成 HTML 文件，HTML文件就是在浏览器中可以展示的文件格式； 把编译出来的 HTML 文件发布到服务器或者网站托管平台； 我们可以通过上面简单的三步骤生成一个只属于自己的个人博客，是不是感觉非常的简单呢，那跟着我一起来使用 hugo 搭建一个属于自己的个人博客吧。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/:2:0","tags":null,"title":"从零开始搭建个人博客之hugo托管GitHubPages","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/"},{"categories":["hugo"],"content":"具体流程 在上一篇博客中，我们已经简单的学习了一下如何搭建个人博客，在这一篇博客中，我们来学习一下如何将我们搭建的个人博客托管到 GitHub Pages 中，首先我们先来了解一下什么是 GitHub Pages。 GitHub Pages 是一项服务，它允许用户将静态网站托管在 GitHub 上。用户可以使用 GitHub Pages 来托管个人博客、项目文档、用户手册等等。GitHub Pages 支持多种静态网站生成器，包括 Jekyll、Hugo、Hexo 等等。它还提供了自定义域名的选项，因此用户可以使用自己的域名来访问他们的网站。GitHub Pages 是完全免费的，但是需要遵守GitHub的使用规则和政策。 我们了解了什么是 GitHub Pages 之后，那么我们为什么要放到 GitHub Pages 里面呢，是因为我们现在搭建的仅仅只是能使用在自己的电脑中，如果换一个电脑之后，我们就不能访问了，因此我们需要一个托管平台，因此我们就将文件托管到 GitHub Pages 中。 现在我们已经了解了原因之后就开始今天的学习吧。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/:3:0","tags":null,"title":"从零开始搭建个人博客之hugo托管GitHubPages","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/"},{"categories":["hugo"],"content":"创建 GItHub Pages 首先要想使用 Github Pages，就必须要有一个 GitHub 账号，如果没有 Github 账号，可以点击此链接跳转注册一个。 当我们登录 Github 之后，点击 New 创建一个新的 Repository ，命名为 {your_username}.github.io ，记住，这里的名字一定是你的用户名，如果不是的话，会无法进行下一步操作。 因为我这里已经创建好了，因此它会报问题，格外需要注意的是 Repo 的权限一定是要 公开的，也就是一定要选择 Public ，因为如果选择了 Private ，后面就会出现无法访问的问题，同时也可以勾选上 Add a README.md ，这样做的原因是为了自动创建 main 分支。 然后找到你刚刚创建好的仓库，点进去，选择上面的 Settings ，在左边的菜单栏中选择 Pages ，如果跟我的不一样，没有关系，这是因为 Github Pages 还在自动帮我们部署网站，只需要稍等片刻即可。 当你看到你的 Page 页面上出现 Your site is live at https://********.github.io/ 时就说明你的 GitHub Pages 自动部署好了，这时点击 Visit Site 就可以看到我们的网站了，当然了因为这时候我们的仓库中空的，所以这时候的网站也是空的，只会显示 yourusername.github.io 。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/:3:1","tags":null,"title":"从零开始搭建个人博客之hugo托管GitHubPages","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/"},{"categories":["hugo"],"content":"搭建 Hugo 站点 Hugo 站点和目标文件 现在我们有了Hugo个人站点，有了Github Pages，那么下一步就是把 hugo 博客发布到 GitHub 。这样我们才能在互联网的任何地方访问我们的博客。 在我们本地的 Hugo 根目录中执行 Hugo 指令。会生成一个 Public 文件夹，我们只需要把 Public 的文件夹上传到 Github 上刚才创建的Github仓库里面, 一分钟左右，就能正常查看博客内容。 hugo 站点（ hugo 根目录）：这个是源文件，也就是你写 Markdown 的地方，可以不用提交到GitHub，也可以选择在 GitHub 上创建一个新的 Repo ，并提交。 public 文件（ hugo/public ）：这个是目标文件，是使用 hugo 指令生成的发布 HTML 内容，可以在浏览器浏览的格式，需要推送到 GitHub 上然后发布到 GitHub Pages 静态网站。 我们的Hugo站点是源文件（带主题、图片、Markdown 源文件），public 是目标文件（最终生成的 css/js 或者是 html 文件）。我们最终需要在网页上展示的是目标文件，所以我们需要使用 Hugo 命令生成目标文件。 将博客部署到 GitHub Pages 在任何 Hugo 站点外（也就是根目录的上级目录处，为什么要出根目录之外进行，是因为方便我们之后将源文件也上传到 GitHub 一份，Git 是不能有层级的，因此我们需要放到站点外面），直接用 Git Clone 将创建好的 GitHub仓库克隆上来。 cd ../ git clone git@github.com:qichenxiaoni/qichenxiaoni.github.io.git 复杂一点但是后续方便的办法： 为了不要每一次改动之后都要手动复制一次，我们可以创建一个 public 目录和 GitHub 仓库的软链接（需要注意的是我们需要先删除根目录下的 public 文件夹） # 进入 Hugo 根目录 cd ~/Docments/Code \\ TMP/qichenxiaoni # 删除 public 文件夹 rm -rf public # 前面是 GitHub.io 仓库，后面是 public 文件的本地目录 ln -s ~/Documents/Code\\ TMP/qichenxiaoni.github.io ~/Documents/Code\\ TMP/qichenxiaoni/public 然后在hugo站点使用 hugo 指令，就会自动在 public 软链接也就是 git repo 下生成目标文件。 最终执行git add/commit/push之后，打开 https://qichenxiaoni.github.io/ 就能看到博客内容。 (可能有几分钟延迟，耐心等待)。 当我们修改了博客的内容时，如果我们没有脚本来自动上传，那么我们可以执行以下命令来上传更新博客。 详细步骤： cn@Resucer:~/Documents/Code TMP/qichenxiaoni$ hugo cd ~/Documents/Code\\ TMP/qichenxiaoni.github.io/ cn@Resucer:~/Documents/Code TMP/qichenxiaoni.github.io$ ls #(这一句可要可不要) cn@Resucer:~/Documents/Code TMP/qichenxiaoni.github.io$ git status cn@Resucer:~/Documents/Code TMP/qichenxiaoni.github.io$ git add * cn@Resucer:~/Documents/Code TMP/qichenxiaoni.github.io$ git status cn@Resucer:~/Documents/Code TMP/qichenxiaoni.github.io$ git commit -m \"two commit\" cn@Resucer:~/Documents/Code TMP/qichenxiaoni.github.io$ git push 如果在执行Git commit -m “first commit”的时候报错，显示作者身份未知，显示如下信息的时候，我们可以根据上面的提示，分别执行下面这两条命令之后再执行一次Git commit -m “first commit” git config --global user.email \"you@example.com\"(注册GitHub的邮箱) git config --global user.name \"Your Name\" (Github的用户名) 如果在执行 Git Push 的时候报错显示没有权限 ERROR: Permission to left-pocket-test/left-pocket-test.github.io.git denied to left-pocket. fatal: Could not read from remote repository. Please make sure you have the correct access rights 解决的办法十分的简单，只需要我们在 GitHub 中添加一下密钥文件就可以了，接下来我会给出在 Linux 中和 Windows 和 Mac 中如何生成密钥文件 首先是在 Linux 中： cd ~/.ssh ssh-keygen -t rsa -C \"xxx@xxx.com\" #填写自己的邮箱地址 #之后按Enter一直回车即可 cat ~/.ssh/id_rsa.pub #复制里面的内容粘贴到github中即可(点击右上角头像Settings-\u003eSSH and GPG Keys-\u003eadd SSH Key.) 在 Windows 和 Mac 中： 1. 在 Windows 中打开 Git Bash 终端。 2. 在终端中输入以下命令，并按 Enter 键： ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\" 这个命令会创建一个新的 SSH 密钥文件，您需要将 \"your_email@example.com\" 替换为您自己的电子邮件地址。 3. 然后，您将被要求输入一个文件名，用于保存密钥文件。您可以接受默认文件名，或者指定一个您自己喜欢的名称。 4. 接下来，您将被要求输入一个密码短语。这个密码短语将加密您的私钥，确保只有您可以访问它。当您输入密码短语时，终端不会显示任何内容，所以请确保您输入的正确。 5. 最后，您将获得一个公钥和一个私钥文件。您的公钥文件将位于 \"~/.ssh/id_rsa.pub\"，您的私钥文件将位于 \"~/.ssh/id_rsa\"。请注意，您的私钥文件必须始终保持机密，所以请确保将其保存在安全的地方。 如果是 mac 的话，步骤跟 windows 的是一样的，这里就不重复说明了。 当我们生成密钥文件之后，回到 Github 中，点击右上角的头像，找到Settings，找到左边菜单栏中的`SSH and GPG keys` ，选择`New SSH key`，将密钥文件的内容复制进去即可。 将源文件上传到 GitHub 为什么我们要将源文件发布到Github中呢，是因为防止本地电脑的硬盘损坏或者文件丢失等风险，因此我们可以在Github中新创一个仓库用来保存源文件，同时如果以后个人博客需要多人的时候也支持多人协作，当然了源文件对于最后的成品展示没有任何影响，简而言之就是如果有需求的可以跟着弄一遍，如果没有这方面需求的，可以直接跳过。 步骤跟前面创建Repo是一样的，只是名称可以随意改动，不需要勾选生成README.md文件，由于我们没有选择生成文件，因此这时候的仓库是没有任何东西的，同时创建完之后GIthub也会提醒你如何使用指令将本地内容上传至Github中。 具体步骤： #在源文件目录（就是后面不带github.io） echo \"# qichenxiaoni.github.io\" \u003e\u003e README.md git init git add * git commit -m \"first commit\" git branch -M main git remote add origin git@github.com:qichenxiaoni/qichenxiaoniio.git git push -u origin main 如果你在执行Git add *这一条指令的时候出现这一类消息的时候，可以使用 git status ，如果执行完 git status 之后，显示有未跟踪的文件，可以单独使用git add ‘文件名’ 这个时候你的源文件就上传到Github的一个新的仓库了。这是用来保存源文件的。而**{your_username}.github.io**是用来保存网站的目标文件的。 由于有人不了解如何在修改了源文件之后保存到Github中，因此下面是具体步骤： #当修改了源文件需要保存的时候，详细步骤： cn@Resucer:~/Documents/Code TMP/qichenxiaoni$ hugo new about/index.md cn@Resucer:~/Documents/Code TMP/qichenxiaoni$ git status cn@Resucer:~/Do","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/:3:2","tags":null,"title":"从零开始搭建个人博客之hugo托管GitHubPages","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8Bhugo%E6%89%98%E7%AE%A1githubpages/"},{"categories":["hugo"],"content":"前言 Hugo是一款快速，现代化且高度可配置的静态网站生成器。它是一个基于命令行的工具，用于将Markdown等文本格式转换为静态网站。Hugo使用Go语言编写，因此它非常快。Hugo的主要优点是构建速度非常快，因为它是一个静态网站生成器，没有必要运行数据库或其他服务。 使用Hugo创建个人博客的主要优势在于它非常快速、易于配置，并且生成的网站可以直接部署到任何Web服务器上，而不需要运行数据库或其他服务。此外，Hugo提供了大量的主题和插件，可以轻松地自定义您的个人博客。它还支持各种文本格式，包括Markdown，AsciiDoc和Org-mode，以及多种语言，包括中文。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/:1:0","tags":null,"title":"从零开始搭建个人博客之使用hugo创建个人站点","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/"},{"categories":["hugo"],"content":"整体流程 书写Markdown文件； 通过hugo架构提供的语法将Markdown文件编译成HTML文件，HTML文件就是在浏览器中可以展示的文件； 把编译出来的HTML文件发布到服务器或网站托管平台； 我们可以通过以上简单的三步实现生成一个只属于自己的个人博客，是不是非常的心动呢？现在就跟着我一起来使用hugo搭建一个直属于自己的个人博客吧。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/:2:0","tags":null,"title":"从零开始搭建个人博客之使用hugo创建个人站点","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/"},{"categories":["hugo"],"content":"具体流程 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/:3:0","tags":null,"title":"从零开始搭建个人博客之使用hugo创建个人站点","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/"},{"categories":["hugo"],"content":"安装hugo 首先需要特别说明的是，我是在Linux系统环境下安装的Hugo，不同的系统安装有不同的方法，此方法不一定适用于所有系统，如遇不适用，烦请各位自行搜索。 # 安装hugo sudo apt install hugo #查看版本 hugo version 更新：需要注意的是，ubuntu22.04.2系统中安装hugo个人博客时使用该教程中的主题，只能使用sudo apt install hugo，不能使用deb包。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/:3:1","tags":null,"title":"从零开始搭建个人博客之使用hugo创建个人站点","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/"},{"categories":["hugo"],"content":"创建站点 # 要存放文件路径下，例如我是在Docments创建的，因此我就要进入Docments cd ~/Docments/Code \\TMP 执行hugo创建文件夹的命令 hugo new site qichenxiaoni 进入刚刚创建好的文件夹中 cd qichenxiaoni 查看里面的文件 ls 简单的介绍一下目录中的部分文件： config.toml 是配置文件，在里面可以定义博客地址，构建配置，标题，导航栏等等。 themes是主题目录，可以下载喜欢的主题，然后配置在****config.toml****里面。 content是博客文章的目录。 static是博客的静态资源，比如图片 public是编译后的目标文件的目录。 格外需要注意的是，现在我们进入的目录就是我们的根目录，里面存放的是你这个博客的所有源文件，也就是Markdown文件、模板文件以及配置文件和你所需要的图片。其次，最终呈现在网页上的不是你的Markdown文件，而是Markdown文件被编译生成的HTML文件，如果你使用F12打开开发人员模式就可以看到里面使用的CSS和JS部分。 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/:3:2","tags":null,"title":"从零开始搭建个人博客之使用hugo创建个人站点","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/"},{"categories":["hugo"],"content":"设置主题 在我们的博客正式运行之前，我们需要给博客设置一个主题，官方主题网站中有很多的主题文件。可以点击此链接跳转，在这里我使用的主题文件是Even（后面我更改了主题，但是在这一系列的教程中还是使用的是Even） 安装主题 需要特别注意的是，这时候我们是要在根目录下运行这行指令，也是要在站点目录下运行，例如我的站点就是qichenxiaoni，因此我要在qichenxiaoni这个路径下执行指令 git clone https://github.com/olOwOlo/hugo-theme-even /themes/even 如果你没有安装git命令可以先去安装git sudo apt install git 如果这时候你发现 git 的速度很慢或者是显示连接超时，可以在 git 前面加上一个 sudo，（此方法用于 Linux）如果还是不行，可以选择手动下载主题，然后复制到根目录下的 themes 目录中，不过可能会报‘WARN 2021/02/03 10:56:17 found no layout file for “HTML” for kind “home”: You should create a template file which matches Hugo Layouts Lookup Rules for this combination.’，这时候我们需要重新 git clone 一下主题。 配置主题 使用VSCode或者WebStorm等代码编辑器打开主题的exampleSite目录下找到一个名为confiig.toml配置文件，打开这个文件，将里面的内容都复制到你根目录下的config.toml文件中，然后根据注释进行修改自定义，下面是我做的一些简单修改，可以简单参考一下。 languageCode = \"zh-cn\" defaultContentLanguage = \"zh-cn\" # en / zh-cn / ... (This field determines which i18n file to use) title = \"小陈的博客\" [author] # essential # 必需 name = \"Chen\" [sitemap] # essential # 必需 changefreq = \"weekly\" priority = 0.5 filename = \"sitemap.xml\" [[menu.main]] # config your menu # 配置目录 name = \"主页\" weight = 10 identifier = \"home\" url = \"/\" [[menu.main]] name = \"归档\" weight = 20 identifier = \"archives\" url = \"/post/\" ==[[menu.main]] name = \"标签\" weight = 30== identifier = \"tags\" url = \"/tags/\" [[menu.main]] name = \"分类\" weight = 40 identifier = \"categories\" url = \"/categories/\" logoTitle = \"小陈的博客\" # default: the title value # 默认值: 上面设置的title值 至此我们也就完成了基本的配置，此时的博客也已经初具雏形了，如果后续需要修改，也可以根据config.toml文件里面的注释进行修改，接下来我们需要尝试创建一个博客页面，来看看我们修改的最终成果如何。 创建第一篇博客 使用以下命令创建出第一个个人博客内容页面吧 hugo new post/first-post.md 需要注意的是，我们所有的markdown源文件都在根目录下的content/post下，不过post文件夹一般都不存在，因此我们在第一次创建的时候需要先创建这个文件夹，以后在创建新的博客时也需要加上这个文件夹，不然他不会创建到这个文件夹中的。 当我们生成了新的 md 文件时，它会自动生成一些行，我们可以看到它的 draft 选项后面接的是 true，当它是 true 的时候是默认不渲染的，如果需要渲染的话，我们可以将 true 改成 false，这样就可以渲染了，但是我们在这里直接将 draft 选项注释掉，然后加上 markdown 语法就 OK 了。后续可以直接自己直接在编辑器里面。 温馨提示： 如果我们需要在博客中插入图片的话，我们需要在static目录下创建存放图片的文件，一般会命名为image或是img。 发布博客 当我们完成上述的操作之后，我们还缺一个步骤就可以完成啦，那就是将我们创建好的博客发布出去，那么怎么发布呢，我们只需要执行一句简单的命令就可以啦。 hugo server 如果我们执行 hugo server 没有报错的话，就说明发布成功，我们就可以在浏览器中输入 localshot:1313 来查看我们的第一篇博客啦。 至此，个人博客就初步的搭建出来了，你也可以自己去尝试一下通过 config.toml 中的注释来修改一下主题的配置，例如将页面下面的图标改成自己需要的，不用担心需要重新启动 hugo，因为 hugo 是立即生效的。 下一篇具体讲述如何将hugo博客托管到github pages中，为什么要托管到github pages的原因。 \u003c全文完\u003e 本文参考教程：码农在新加坡的个人博客 ","date":"2023-03-20","objectID":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/:3:3","tags":null,"title":"从零开始搭建个人博客之使用hugo创建个人站点","uri":"/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E4%BD%BF%E7%94%A8hugo%E5%88%9B%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%AB%99%E7%82%B9/"}]